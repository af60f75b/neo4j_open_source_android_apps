id,short_id,title,message,additions,deletions,total,author_name,author_email,committer_name,committer_email,authored_date,committed_date,parent_ids
7107518b4a6444a3731422375c4a8be70b7d5658,7107518b,"Fixed misc bugs, started major UI improvements.","Fixed misc bugs, started major UI improvements.

A few miscellaneous bugs were fixed. The Google Sheets parser had a bug
in which it was possible to break it by entering a menu title without a
corresponding link. Also, the Xamarin version has been updated, which
fixed a Xamarin bug that prevented Android compatibility of versions 5.0
and lower. Also started on some major UI improvements, which (while
unfinished) will make the app generate a truly mobile-friendly webpage
that appears native, purely generated from the HTML on the website.
",,,,Mackinnon Buck,mackinnonman@icloud.com,Mackinnon Buck,mackinnonman@icloud.com,1491089487,1491089487,d49b9263baf38d916af708ef7786e76bd5f0cacc
d49b9263baf38d916af708ef7786e76bd5f0cacc,d49b9263,Added iOS support!!!,"Added iOS support!!!

This app now supports iOS!!! Or does iOS support this app?...  idk
doesn't matter.  We did it!  Wasn't so hard.  Anyways.  The iOS version
was designed to look as close to the Android version as possible, while
still looking like an iPhone app.  All the colors and everything match
the Android version.  There are a few intricacies about the iOS
implementation that should be noted for future reference, though.  The
custom web view renderer works great, but iOS by default doesn't allow
HTTP requests from insecure servers, unfortunately including the CAM
website :'(  So you have to basically manually allow requests from the
CAM website in info.plist.  And the custom TabbedPage renderer.  Whew.
So in iOS tabbed pages can't scroll.  Instead, if there are too many
items to fit, there is a ""more"" button that you can click to see the
rest.  Ugly design imo, but that's just me.  But anyways, this also
means that iOS is willing to cram quite a few tab buttons on the bottom,
so the labels overlap if they're too long.  I spent quite a while trying
to figure out how to word wrap the bottom labels, which apparently is
not possible to do.  So instead, I figured I would make a custom
auto-ellipsis system.  While it's somewhat complex, it does in fact
shorten the name and add ellipses at the end if the name of the tab is
too long to fit in the space provided.  Works like a charm.  I also
updaded the logo to be the same as the splash screen icon.  It's cleaner
that way.  And fixed those random package warnings.  Fun stuff, good
times.  Project is looking good.
",,,,Mackinnon Buck,mackinnonman@icloud.com,Mackinnon Buck,mackinnonman@icloud.com,1484009272,1484009272,6880177d4a5b5580fdca0b3d587d816770b7b8df
6880177d4a5b5580fdca0b3d587d816770b7b8df,6880177d,"Better splash screen, added search, improved UI.","Better splash screen, added search, improved UI.

The splash screen now has a loading circle and a label when it's
connecting to the Google Spreadsheet.  That way the user knows progress
is being made.  Also improved the efficiency of the master page items
and added better customization.  I made a custom Card class and CardView
class that the links and documents page now uses.  Most importantly, I
added a search feature, which allows the user to search for any
documents or pages in the app.  Pretty neato.
",,,,Mackinnon Buck,mackinnonman@icloud.com,Mackinnon Buck,mackinnonman@icloud.com,1483401595,1483401595,acdbc0ff3dccd7975a2117b2be6e8ae3e6855c47
acdbc0ff3dccd7975a2117b2be6e8ae3e6855c47,acdbc0ff,Cleaned up old resources and improved UI.,"Cleaned up old resources and improved UI.

All those old icons for the master page are gone.  Also subsections can
be selected straight from the master page instead of clicking on the
main section and using the ""..."" button to switch.
",,,,Mackinnon Buck,mackinnonman@icloud.com,Mackinnon Buck,mackinnonman@icloud.com,1483129443,1483129443,261fb3f85b737bf167f8ec9894385a01c22f280c
261fb3f85b737bf167f8ec9894385a01c22f280c,261fb3f8,The UI integration is almost done!,"The UI integration is almost done!

The UI is now COMPLETELY generated from the website!  Ahhhh so happy :)
Also added an ""ExternalResourcesPage"" which allows you to access links
on the website that lead to external sources like PDFs or other
websites.  And I removed all of the junk that was associated with the
old UI as well as all the old commented-out code.  And I documented
everything.  Probably the best commit yet!
",,,,Mackinnon Buck,mackinnonman@icloud.com,Mackinnon Buck,mackinnonman@icloud.com,1483078733,1483078733,0943aae8fb91362a9786bbd4d68afaae32477cb2
0943aae8fb91362a9786bbd4d68afaae32477cb2,0943aae8,*Unstable* Haven't committed in days.,"*Unstable* Haven't committed in days.

I did far too much to summarize what I did in however many characters
are provided by the summary box.  Heck, I don't even remember where the
last commit left off.  Well now I'm working on making the app fully
generated by the website.  Like, everything.  So I found the Google
Sheets document that controls the navigation bar and contains all the
links to all the webpages (exactly what I needed, yay).  So I wrote an
*insanely* complicated parser for it to generate a tree of nodes
containing the names of the sources along with the links to them.  So
the idea is I'll use that to generate the rest of the UI.  And I also
renamed ""SelectiveWebPage"" to ""JunklessPage"" because that seemed like a
more appopriate name.  And I'm using a more universal method to find the
meaty content of the webpage.  Anyways.  Sooooo many comments.  And like
60% of the existing .cs files won't exist after the new UI
implementation is gone.  And also there are soooo many comments.  Don't
mind them.  Will probably be fixed in the next commit.
",,,,Mackinnon Buck,mackinnonman@icloud.com,Mackinnon Buck,mackinnonman@icloud.com,1482992566,1482992566,2e20d680f4a33a792734666ceeb8f69d889106f3
2e20d680f4a33a792734666ceeb8f69d889106f3,2e20d680,Improved performance and added UI features.,"Improved performance and added UI features.

I improved performance by only modifying the SelectiveWebPage's
StackLayout's children instead of completely creating a new StackLayout
every time.  Also added a nice loading circle when the page is loading
instead of ""Loading...""  Also created ""MultiSelectiveWebPage,"" which
allows a SelectiveWebPage to have multiple mini subpages that can be
switched between with a button on the toolbar.
",,,,Mackinnon Buck,mackinnonman@icloud.com,Mackinnon Buck,mackinnonman@icloud.com,1482389268,1482389268,fac25388924708aa33d5b215275bf460c4a83259
fac25388924708aa33d5b215275bf460c4a83259,fac25388,Basic UI integrated with selective webpage loading.,"Basic UI integrated with selective webpage loading.

I have implemented the basic UI of the app, with a master page that
contians items that link to various parts of the app.  Webpages from the
CAM website can be easily converted into mobile views with
SelectiveWebPage, which allows you to specify the part of the page you
want to load without having the HTML hard-coded into the app.  So far,
Android support has been the main focus.
",,,,Mackinnon Buck,mackinnonman@icloud.com,Mackinnon Buck,mackinnonman@icloud.com,1482277392,1482277392,b8d7c9fde07a7fb6f3c2c640483b9b02287c47a1
b8d7c9fde07a7fb6f3c2c640483b9b02287c47a1,b8d7c9fd,Initial commit,Initial commit,,,,Mackinnon Buck,mackinnonman@icloud.com,Mackinnon Buck,mackinnonman@icloud.com,1482276927,1482276927,
