id,short_id,title,message,additions,deletions,total,author_name,author_email,committer_name,committer_email,authored_date,committed_date,parent_ids
23ee6d142f1e63d272d91bd3cb468557b29d33f1,23ee6d14,Get rid of a bunch of unused Java dependencies,"Get rid of a bunch of unused Java dependencies
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466301490,1466301490,0f3c95f47c7e73a9a139019a84725e04756c4b2d
0f3c95f47c7e73a9a139019a84725e04756c4b2d,0f3c95f4,"Get rid of fragment, change activity to use ReactActivity","Get rid of fragment, change activity to use ReactActivity
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466300928,1466300961,d9d504350a23dc9bb8a55df6fce367eeda2345b8
d9d504350a23dc9bb8a55df6fce367eeda2345b8,d9d50435,Get rid of Dagger 2 and ButterKnife usages from Java code,"Get rid of Dagger 2 and ButterKnife usages from Java code
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466299859,1466299859,393c19c8799b04715bb13783cafe00288d513944
393c19c8799b04715bb13783cafe00288d513944,393c19c8,Delete a bunch of assets that were only used by Java code,"Delete a bunch of assets that were only used by Java code
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466299512,1466299512,4dc358db6a47f5301fb1ba9d2ea72e315ca7881f
4dc358db6a47f5301fb1ba9d2ea72e315ca7881f,4dc358db,"Get rid of some more code, move RN Java code to top level","Get rid of some more code, move RN Java code to top level
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466299022,1466299022,04ae12f9651c92f05c3941f75cf61509ea2e2ad0
04ae12f9651c92f05c3941f75cf61509ea2e2ad0,04ae12f9,Tear out a bunch of Java utility code,"Tear out a bunch of Java utility code
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466298913,1466298913,ce776615925d157802aabc6031ea00869975baa6
ce776615925d157802aabc6031ea00869975baa6,ce776615,Tear out expression view implementation from Java code,"Tear out expression view implementation from Java code
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466298780,1466298780,2be20dfcd7630bbe7f54e467c880edfccb7a4b1e
2be20dfcd7630bbe7f54e467c880edfccb7a4b1e,2be20dfc,Get rid of Java expression implementation,"Get rid of Java expression implementation
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466298512,1466298512,2ad743f466ee22d574ab1b5624f5104857ee1976
2ad743f466ee22d574ab1b5624f5104857ee1976,2ad743f4,Tear out Java producer and slot implementations,"Tear out Java producer and slot implementations
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466298465,1466298465,603c7dbceb97ed4f7e19ada2552fe41467597da3
603c7dbceb97ed4f7e19ada2552fe41467597da3,603c7dbc,Tear out the Java drag observable code,"Tear out the Java drag observable code
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466298238,1466298238,2a0400b2d4970254e9d1c1959b657c6fc9325274
2a0400b2d4970254e9d1c1959b657c6fc9325274,2a0400b2,Tear out the Java drag manager code,"Tear out the Java drag manager code
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466297592,1466297606,a7b867bec1603eb4f7b8faa666d7e5a473112fcb
a7b867bec1603eb4f7b8faa666d7e5a473112fcb,a7b867be,Tear out Java app state,"Tear out Java app state
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466297128,1466297128,9f8674fdc764c53ae387614bfcc850278ef5cfcf
9f8674fdc764c53ae387614bfcc850278ef5cfcf,9f8674fd,Tear out Java definition implementation,"Tear out Java definition implementation
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466296771,1466296785,14ffb265d0f53cf1563055e01fe92eb0352574af
14ffb265d0f53cf1563055e01fe92eb0352574af,14ffb265,Tear out palette implementation from Java code,"Tear out palette implementation from Java code
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466296090,1466296090,f76c431062890c56976a47f54311278beac6080b
f76c431062890c56976a47f54311278beac6080b,f76c4310,Tear out panning from the Java code,"Tear out panning from the Java code
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466295341,1466295349,058adbc5c8d6b9f13352a85f01e589d5d3ce0f55
058adbc5c8d6b9f13352a85f01e589d5d3ce0f55,058adbc5,Tear out the evaluator from the Java side,"Tear out the evaluator from the Java side

The RN side is feature-complete, so pretty much no more Java should be
necessary!
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466294932,1466294932,0670ebc2a4b17c60e39cadf29ec2d1e475d2aaeb
0670ebc2a4b17c60e39cadf29ec2d1e475d2aaeb,0670ebc2,Fail evaluation if the result expression is too big,"Fail evaluation if the result expression is too big
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466294129,1466294129,733a836633def1df6068409688a0fb804fb68335
733a836633def1df6068409688a0fb804fb68335,733a8366,Add timeout detection to evaluator code,"Add timeout detection to evaluator code

At the start of every recursive function, we now check if more than one second
has passed since the start, and throw an exception if so.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466293213,1466293213,06a1c979669bb94b559d5b459049afcfb193c8ae
06a1c979669bb94b559d5b459049afcfb193c8ae,06a1c979,Gracefully fail on stack overflow errors,"Gracefully fail on stack overflow errors

We just catch any exception and treat it as a timeout.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1466291870,1466291870,e18b45c8ad69a7b32de0cbbf655c82c48aa6a6c5
e18b45c8ad69a7b32de0cbbf655c82c48aa6a6c5,e18b45c8,Change HitTester to not use generators as much,"Change HitTester to not use generators as much

It still does for generating expressions, but this moves most of the code to
just use regular imperative code, which isn't much different in structure. The
drop target testing code path was having performance issues, and the Chrome
debugger apparently isn't happy with generators yet anyway, so I should probably
just avoid them at least here.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465916184,1465916184,a99d7756224eb487c933f232b9dca1f6c5a4c9c5
a99d7756224eb487c933f232b9dca1f6c5a4c9c5,a99d7756,Implement automatic numbers,"Implement automatic numbers

At least, they seem to work.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465795821,1465795821,9f8b4cc358c0158a41a9f6d9bc831a850b2be231
9f8b4cc358c0158a41a9f6d9bc831a850b2be231,9f8b4cc3,Add a setting for automatically recognizing numbers,"Add a setting for automatically recognizing numbers

It doesn't do anything yet, but will soon.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465789481,1465789481,8d084ebeb90ec75151e4c3b632a5c35a43340363
8d084ebeb90ec75151e4c3b632a5c35a43340363,8d084ebe,Add validation for definition and variable names,"Add validation for definition and variable names
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465779017,1465779017,4045a90ad99d1863e9c292ff6c57d2cdb160e04d
4045a90ad99d1863e9c292ff6c57d2cdb160e04d,4045a90a,Add shouldComponentUpdate in a bunch of places,"Add shouldComponentUpdate in a bunch of places

This significantly improves performance, and makes it reasonable to run the app
in debug mode, which is nice.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465776118,1465776118,62a99bc5c6fa191f5829fb9cef09481a243781cc
62a99bc5c6fa191f5829fb9cef09481a243781cc,62a99bc5,Add a buggy implementation of palette scrolling,"Add a buggy implementation of palette scrolling

Unfortunately, it looks like it's sort of random whether the palette or the
canvas gets gesture events, so I'll need to do something smarter there.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465770821,1465770821,1181eaf2971935a087d7af8f840f1c5303429c96
1181eaf2971935a087d7af8f840f1c5303429c96,1181eaf2,Add FABs to create lambdas and definitions,"Add FABs to create lambdas and definitions
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465694737,1465694737,dc43bd7a41e5a541efb6902a2b11bd2dd19befcd
dc43bd7a41e5a541efb6902a2b11bd2dd19befcd,dc43bd7a,Show the palette buttons in the action bar,"Show the palette buttons in the action bar

Also change the action bar to be aggressive about setting itself as the gesture
responder so that touch events go directly to it. Unfortunately, it looks like
you can still tap on expressions behind the action bar, so I'll have to
investigate that.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465691993,1465691993,c3c2a4e016c3ea8c5b6bad5a7b725c4868646e45
c3c2a4e016c3ea8c5b6bad5a7b725c4868646e45,c3c2a4e0,Add the lambda icon,"Add the lambda icon
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465690822,1465690822,2556df1329ae33d6c7350c905b7a9e48be912fd2
2556df1329ae33d6c7350c905b7a9e48be912fd2,2556df13,Use the real definition icon in definitions,"Use the real definition icon in definitions
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465690091,1465690091,022b51ba25ccfb4b8a5588d4738a0fc0b7f8e226
022b51ba25ccfb4b8a5588d4738a0fc0b7f8e226,022b51ba,Fix placement of evaluated expressions,"Fix placement of evaluated expressions

We were calculating the screen position but then calling it the canvas position,
so after panning the placed positions would be off.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465622669,1465622669,4e36b7581a4c7b81ec1c2abaa824226d75666ef1
4e36b7581a4c7b81ec1c2abaa824226d75666ef1,4e36b758,Fix issue where palette deletion was deleting any lambda expression,"Fix issue where palette deletion was deleting any lambda expression

It should only delete lambda expressions with empty bodies.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465622184,1465622184,90d466c917612bdcb27fd70b21eb9b085bf8e17a
90d466c917612bdcb27fd70b21eb9b085bf8e17a,90d466c9,Implement panning,"Implement panning

We now keep as part of the state the canvas coordinates of the screen origin,
and use it for point conversions and move it when panning.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465622007,1465622007,876e156a1841e93e9d2105568c94a3fd9b50cf06
876e156a1841e93e9d2105568c94a3fd9b50cf06,876e156a,Highlight the delete bar when dragging over it,"Highlight the delete bar when dragging over it
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465574973,1465574973,777c910c51dc8561fba11bf2c419524be8bf82d2
777c910c51dc8561fba11bf2c419524be8bf82d2,777c910c,Delete expressions when dropping on the delete bar,"Delete expressions when dropping on the delete bar
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465574454,1465574454,f14c3b7c4d0036f60c0faf2941fbc561833b2cfb
f14c3b7c4d0036f60c0faf2941fbc561833b2cfb,f14c3b7c,Add styles for the delete bar,"Add styles for the delete bar
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465529401,1465529401,5409636939946a1582e7ce35c76dc77a0f8daf6d
5409636939946a1582e7ce35c76dc77a0f8daf6d,54096369,Add hacky initial version of the delete bar,"Add hacky initial version of the delete bar

The styles aren't there yet and it doesn't do anything, but this makes it so
the bar appears and disappears as you drag expressions around.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465492388,1465492388,c212b5eee5b144122f19b093c01de09ed8c97302
c212b5eee5b144122f19b093c01de09ed8c97302,c212b5ee,Pull the toolbar code out into its own file,"Pull the toolbar code out into its own file
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465490909,1465490909,960a3424aaab4ef2d05514a977d25dd46fb66ead
960a3424aaab4ef2d05514a977d25dd46fb66ead,960a3424,Add the ability to drag to and from the definition palette,"Add the ability to drag to and from the definition palette
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465452856,1465452856,2527c10b9fd352651b7000800bb79c284a1dcebf
2527c10b9fd352651b7000800bb79c284a1dcebf,2527c10b,Make the definition dialog use capital letters by default,"Make the definition dialog use capital letters by default
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465450701,1465450701,41624624824175dee1bcf5c8069e147c98d3011a
41624624824175dee1bcf5c8069e147c98d3011a,41624624,Remove native FABs and event code,"Remove native FABs and event code
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465449787,1465449787,cb1df90bbf0515e3453dea645257c3b21434ce01
cb1df90bbf0515e3453dea645257c3b21434ce01,cb1df90b,Add lambda and definition creation from the action bar,"Add lambda and definition creation from the action bar

This gets rid of the last dependency on native code, I think.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465448398,1465448398,00742be23b18defb1094b64af87b30f978946925
00742be23b18defb1094b64af87b30f978946925,00742be2,Make the delete definition dialog actually delete the definition,"Make the delete definition dialog actually delete the definition
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465447148,1465447148,e27d5e9105ef1ef1cab226cc0fdf930d2a519e89
e27d5e9105ef1ef1cab226cc0fdf930d2a519e89,e27d5e91,"Show the actual definition names in the ""delete definitions"" dialog","Show the actual definition names in the ""delete definitions"" dialog
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465402512,1465402512,8d03b18766d8dd64c80fce64a674920daa666df9
8d03b18766d8dd64c80fce64a674920daa666df9,8d03b187,Add dialog library and add placeholder for deleting definitions,"Add dialog library and add placeholder for deleting definitions
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465401511,1465401511,fceb25374ba7096ac08efcfff1d7e6199f46ba17
fceb25374ba7096ac08efcfff1d7e6199f46ba17,fceb2537,Change FABs to not add old-style expressions,"Change FABs to not add old-style expressions
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465229742,1465229742,56dca8d65d1c0dd2e52ed162015324364902e91c
56dca8d65d1c0dd2e52ed162015324364902e91c,56dca8d6,Get rid of the normal action bar in favor of the React Native one,"Get rid of the normal action bar in favor of the React Native one
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465198012,1465198012,8eb06d8354281e557e7ff41665185a22069ea7b7
8eb06d8354281e557e7ff41665185a22069ea7b7,8eb06d83,Add a toolbar with all toolbar options,"Add a toolbar with all toolbar options

Most of the options just have stubs for now. Hopefully soon this can completely
replace the existing toolbar.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465194739,1465194739,b2d2cc91b9a583eb3e1c4aedd29eb438b5c2a37d
b2d2cc91b9a583eb3e1c4aedd29eb438b5c2a37d,b2d2cc91,Fix broken execute icon,"Fix broken execute icon

For some reason, the Gradle line wasn't copying the icon fonts correctly, so I
just copied them directly and the play icon shows up now.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465188763,1465188763,2eb030257e54ae5a1651f8545d8477e04c873039
2eb030257e54ae5a1651f8545d8477e04c873039,2eb03025,Move demo video viewing to the React Native side,"Move demo video viewing to the React Native side
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465187239,1465187239,c7ad38763dddd2bd6a0166158ad840562e96a1ae
c7ad38763dddd2bd6a0166158ad840562e96a1ae,c7ad3876,Get flow checking working on older RN version,"Get flow checking working on older RN version
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465186122,1465186122,f570e80049822ef86370c4e873803cffc5591cfe
f570e80049822ef86370c4e873803cffc5591cfe,f570e800,Downgrade React Native version to 0.25,"Downgrade React Native version to 0.25

Looks like https://github.com/facebook/react-native/issues/7941 breaks dragging,
so fingers crossed that it gets fixed. If not, I'll have to find some
workaround.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465184474,1465184474,16112d171e4de96056acb04731bd15d2c0fd434a
16112d171e4de96056acb04731bd15d2c0fd434a,16112d17,Upgrade Flow to latest and get type checking working,"Upgrade Flow to latest and get type checking working
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465023088,1465023088,b8fa2c06662b917cbf67b53ccb45389d16b8b924
b8fa2c06662b917cbf67b53ccb45389d16b8b924,b8fa2c06,Upgrade React and React Native to latest,"Upgrade React and React Native to latest
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465019068,1465019083,030df78009d5552eb8f43293508a809abf720ff6
030df78009d5552eb8f43293508a809abf720ff6,030df780,Upgrade to React Native 0.25.1,"Upgrade to React Native 0.25.1

This also required changing code to import react directly.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465016268,1465016268,2ae0b2740c2c7a572581da30e3172fa7c5da59ed
2ae0b2740c2c7a572581da30e3172fa7c5da59ed,2ae0b274,Add definition text to definition palette,"Add definition text to definition palette

The underline doesn't work yet, but it will be fixed in a later React Native
version.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465008512,1465014889,b1223ffce66b3cb512639658ef4b6a3daf41b1b2
b1223ffce66b3cb512639658ef4b6a3daf41b1b2,b1223ffc,Add a package name suffix for debug builds,"Add a package name suffix for debug builds

This is nice because it makes it easier to work on the new app while still
having the old app installed.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1465010473,1465010513,ff7f7551e6d93be0be63e6f126e336d7bcc80dba
ff7f7551e6d93be0be63e6f126e336d7bcc80dba,ff7f7551,Hook action bar buttons up to the new palette actions,"Hook action bar buttons up to the new palette actions
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1464246591,1464246591,7896df0ab77c9d92549703779f7f35bd4d96fcbb
7896df0ab77c9d92549703779f7f35bd4d96fcbb,7896df0a,Hook palette state up to redux store,"Hook palette state up to redux store

There isn't a way to actually change it to the definition palette, but the
rendering side of things should mostly work.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1464245323,1464245380,aea0a89993cc92f5111b836c4fdbcfa0f3c66514
aea0a89993cc92f5111b836c4fdbcfa0f3c66514,aea0a899,Remove stray console.log,"Remove stray console.log
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1464156681,1464156681,4d6c0c53e02ddafc710435d480e894fb25b8e1c8
4d6c0c53e02ddafc710435d480e894fb25b8e1c8,4d6c0c53,Implement dragging from and dropping on the lambda palette,"Implement dragging from and dropping on the lambda palette
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1464156508,1464156508,936ceb9069fca39ac14389b75bd0ee3a97dc2b56
936ceb9069fca39ac14389b75bd0ee3a97dc2b56,936ceb90,Add an initial lambda palette,"Add an initial lambda palette

Currently you can't drag expressions from it, and it doesn't use the native
drawer view (which might end up eing an advantage), but it shows expressions and
seems to use the right margins.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1464106950,1464106950,10667d3d97e5ef033fb87cf86506fc7c6d08c709
10667d3d97e5ef033fb87cf86506fc7c6d08c709,10667d3d,Show errors on invalid definitions,"Show errors on invalid definitions
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463719158,1463719158,da495ea00962ed0f0e5be6a33df8c5cc78b6ca42
da495ea00962ed0f0e5be6a33df8c5cc78b6ca42,da495ea0,Generate mixin template classes,"Generate mixin template classes

This allows us to write mixins that are typechecked using flow and have
autocomplete in WebStorm. It's a bit of a hack, but it's an auto-generated hack,
so it's ok.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463718163,1463718163,1548f18689ec05ab0dfd4b516e0162e62dcb8778
1548f18689ec05ab0dfd4b516e0162e62dcb8778,1548f186,"Add value type mixins, use them to replace Geometry.js","Add value type mixins, use them to replace Geometry.js
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463673209,1463673209,75960222a961f597390f9327d4004ceacc832946
75960222a961f597390f9327d4004ceacc832946,75960222,Hook up definitions,"Hook up definitions

We now can compute the expanded definitions from the user definitions, then use
those during evaluation to expand user definitions and collapse terms after
evaluation.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463551899,1463551899,377351f0b57026c507045df6a33fd60f7b258094
377351f0b57026c507045df6a33fd60f7b258094,377351f0,Fix various issues with definitions,"Fix various issues with definitions

* Allow dropping references onto definitions.
* Still measure the reference body when the definition has a value.
* Add 1 to all path depths within definitions.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463545732,1463545732,2aec558cb2518426284b0a6bca79ab87178a5ccb
2aec558cb2518426284b0a6bca79ab87178a5ccb,2aec558c,Fix crash when dragging definitions,"Fix crash when dragging definitions

I was accidentally updating the view key for a view, and the tracked view code
couldn't handle prop changes.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463545008,1463545008,6d75a02bb0fbaffb03d7cddc9d07831e9ce11960
6d75a02bb0fbaffb03d7cddc9d07831e9ce11960,6d75a02b,Add the ability to drag references out of definitions,"Add the ability to drag references out of definitions
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463498606,1463498606,a40872a234f8e72f8bba7f574b545acc4048b8e2
a40872a234f8e72f8bba7f574b545acc4048b8e2,a40872a2,Allow extracting definition bodies,"Allow extracting definition bodies
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463496025,1463496025,9f97027407174816c4c61d5424e398f747d96398
9f97027407174816c4c61d5424e398f747d96398,9f970274,Add the ability to drag into definitions,"Add the ability to drag into definitions
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463495507,1463495507,816b2c2b80e6143d1c6acde68765f49c68ad0705
816b2c2b80e6143d1c6acde68765f49c68ad0705,816b2c2b,Add the ability to drag definitions,"Add the ability to drag definitions
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463462924,1463462924,45a36b1274f05feb77f026cf31c32ff80a06fb3a
45a36b1274f05feb77f026cf31c32ff80a06fb3a,45a36b12,Change the data model to allow dragged definitions,"Change the data model to allow dragged definitions

Currently it isn't hooked up to anything, but soon it will be.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463461583,1463461583,a85710338967cbc503aafa9291677dd648114467
a85710338967cbc503aafa9291677dd648114467,a8571033,Add larger buffer for parseFlow script,"Add larger buffer for parseFlow script

The JSON contents were being truncated sometimes, so this should fix that.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463460361,1463460361,735dc321314ead0cd8afbd852ad9eb8260e78e85
735dc321314ead0cd8afbd852ad9eb8260e78e85,735dc321,Fix bug in type equality,"Fix bug in type equality

Different union cases should never compare equal.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463383657,1463383657,384c1ea625c9dc318692ab98e8ecc2c11948c704
384c1ea625c9dc318692ab98e8ecc2c11948c704,384c1ea6,"Add equals, hashCode, and toString to custom collections","Add equals, hashCode, and toString to custom collections
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463383000,1463383000,ddd1d08a4477cca14b4d9f6b60a5dc2937c783af
ddd1d08a4477cca14b4d9f6b60a5dc2937c783af,ddd1d08a,Change value types to no longer use Immutable.Record,"Change value types to no longer use Immutable.Record

Immutable.Record didn't quite match the behavior I wanted anyway, and was making
debbugging more of a pain and was probably less efficient. I might end up moving
back at some point, but it's unclear.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463380641,1463380696,6b80c48981c7f3cd6720dbb4ea733f7589c2b183
6b80c48981c7f3cd6720dbb4ea733f7589c2b183,6b80c489,Fix some bugs when running on the device,"Fix some bugs when running on the device
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463377568,1463377568,c4d1388d8b919f3d88654e1e4046e679eb2f2e2e
c4d1388d8b919f3d88654e1e4046e679eb2f2e2e,c4d1388d,Clean up a few more places using lenses,"Clean up a few more places using lenses
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463371776,1463371776,28c02226ae0fb1f17a04d0aeb4d98f75059b433a
28c02226ae0fb1f17a04d0aeb4d98f75059b433a,28c02226,Start using lenses in a few places,"Start using lenses in a few places
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463367442,1463367442,f55bd1a2a3ce8f955d255262a5edc01f5df0c117
f55bd1a2a3ce8f955d255262a5edc01f5df0c117,f55bd1a2,Generate custom lens types,"Generate custom lens types

At least, they seem to typecheck.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463366166,1463366166,675b50d02a760b4920947ab3523d43c6fa07a04c
675b50d02a760b4920947ab3523d43c6fa07a04c,675b50d0,Change newFoo to Foo.make,"Change newFoo to Foo.make

This is a little nicer in that everything is contained in the class, and makes
types.js nice and simple.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463357394,1463357394,0220b87cf1947124fa25fc9e30154100f694a272
0220b87cf1947124fa25fc9e30154100f694a272,0220b87c,Change flow types to use classes instead of normal types,"Change flow types to use classes instead of normal types

This should make it more normal to have a static `make` method.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463355564,1463355564,9bc474f20434513c7702905bfa4a26564af7c130
9bc474f20434513c7702905bfa4a26564af7c130,9bc474f2,First pass at moving flow types to a .js.flow file,"First pass at moving flow types to a .js.flow file

The normal .js and the .js.flow file are really similar, but over time, the .js
file will just have plain dynamic stuff (and maybe not be autogenerated at all)
and the .js.flow file will only have types.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463354399,1463354399,e92ff420fa5ef0cd210602f318bbeabec46f0ea1
e92ff420fa5ef0cd210602f318bbeabec46f0ea1,e92ff420,Add a make static method for value classes,"Add a make static method for value classes
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463344642,1463344642,0c9cd8711b58c5abf4e1b991256acf063526f391
0c9cd8711b58c5abf4e1b991256acf063526f391,0c9cd871,Change all code to use custom immutable collections,"Change all code to use custom immutable collections
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463296995,1463296995,90ff666de4d4344a6b76e323f779892e1169b577
90ff666de4d4344a6b76e323f779892e1169b577,90ff666d,Add more methods to the collections,"Add more methods to the collections

I think this now covers everything that I'm using.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463294667,1463294700,5e4da276961c71dd369ab681aadba4f802e22ef0
5e4da276961c71dd369ab681aadba4f802e22ef0,5e4da276,Get rid of some uses of forEach,"Get rid of some uses of forEach

for...of loops are probably better anyway.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463292953,1463292953,7f6e4645c6041ebfc5e18addaae6d3af0835e991
7f6e4645c6041ebfc5e18addaae6d3af0835e991,7f6e4645,"Add set types, make types iterable","Add set types, make types iterable

It turns out that making things iterable with flow is a pain, but probably the
least painful way is to have a simple Iterable.js file that has an Iterable
superclass that you can extend from.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463292513,1463292658,7a77736b9a408f71ba47e140c041103b79d60d1d
7a77736b9a408f71ba47e140c041103b79d60d1d,7a77736b,Add custom set and map types,"Add custom set and map types
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463285660,1463285954,aea76a40ae6a770441db47a3fc22b1a8f94b8d01
aea76a40ae6a770441db47a3fc22b1a8f94b8d01,aea76a40,Add basic lens support,"Add basic lens support

You can now navigate through objects and do immutable replacements using lenses.
They don't yet support navigating through union cases or immutalble maps, and
the type definitions aren't hooked up yet, but they seem to work.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463246621,1463246621,e6c2ca33a39592ed7d6fd51850b2cc184f053bec
e6c2ca33a39592ed7d6fd51850b2cc184f053bec,e6c2ca33,Change generated value classes to use class syntax,"Change generated value classes to use class syntax

This makes the normal definitions like serialize a little more reasonable.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463241807,1463241807,ce5f850c9f0887664fbcbcae4942f0a1a5126451
ce5f850c9f0887664fbcbcae4942f0a1a5126451,ce5f850c,Expand visitor definitions for WebStorm,"Expand visitor definitions for WebStorm

This makes it so parameter completion is more useful (although it still isn't
great). I also changed the types to use method syntax, which is a little
shorter.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463194898,1463194898,0b4c3975f2080c0f690abf5f511d23ac46887000
0b4c3975f2080c0f690abf5f511d23ac46887000,0b4c3975,Add custom WebStorm-specific types,"Add custom WebStorm-specific types

WebStorm doesn't yet deal well with union types, but it does loose matching by
name, so we can add some un-imported types that give us better autocomplete for
WebStorm.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463156808,1463156808,2a4890b0952a7629324f7e877faf1c4e489258de
2a4890b0952a7629324f7e877faf1c4e489258de,2a4890b0,Change match from a top-level function to a method,"Change match from a top-level function to a method

WebStorm doesn't yet see the method, but maybe there's some trick to make that
work.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463153929,1463153929,2b93134a399151e3ad44bbd1c25c46ecf8f572df
2b93134a399151e3ad44bbd1c25c46ecf8f572df,2b93134a,Remove special-case objectUnion code,"Remove special-case objectUnion code

Now that we have serialization and deserialization for Redux actions, we don't
need to worry about using plain objects.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463122795,1463122795,68980f893136377a39939f6b1efa2f5b489d8cf5
68980f893136377a39939f6b1efa2f5b489d8cf5,68980f89,Implement basic serialization and deserialization,"Implement basic serialization and deserialization

I also added a Redux middleware to serialize all objects and deserialize them
from the reducer. The basic idea behind deserialization is that every object
that's a child of a value type is either another value type or something that's
already JSON-serializable. This actually misses the case of maps, but I can
hopefully add those later.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463122116,1463122116,6de35b35bf146ec3f40036b7d2ebb8b65f7b4538
6de35b35bf146ec3f40036b7d2ebb8b65f7b4538,6de35b35,Add a first pass at type serialization and deserialization,"Add a first pass at type serialization and deserialization

This should make it possible to have regular types for actions instead of having
a weird special case.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463117305,1463117305,3ad549eb7a2643aeb93adb8ef870990c23ed63ca
3ad549eb7a2643aeb93adb8ef870990c23ed63ca,3ad549eb,Simplify generated types code,"Simplify generated types code

This should make it a little easier to add new features, I think, and hopefully
makes the generated types.js code more clean (at the expense of making some of
the implementation details more opaque).
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1463037933,1463037933,ace0f339dd11031f04cb6adf77839033c914a029
ace0f339dd11031f04cb6adf77839033c914a029,ace0f339,More progress toward supporting definitions,"More progress toward supporting definitions

Expression paths now can base based on either a top-level expression with an ID
or based on a definition.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462896631,1462896631,c0741e6aa1bb4bacf13bffcb8afba192f13a5337
c0741e6aa1bb4bacf13bffcb8afba192f13a5337,c0741e6a,Hook up definition creation to the state,"Hook up definition creation to the state
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462857518,1462857518,4efbc5a724193f60bf80efd351e7cafa21536249
4efbc5a724193f60bf80efd351e7cafa21536249,4efbc5a7,Add definitions to display state,"Add definitions to display state
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462855698,1462855698,4a65f354d11af1d17071216c5c0e99ec0e5e0750
4a65f354d11af1d17071216c5c0e99ec0e5e0750,4a65f354,Fix flow checks,"Fix flow checks

Also implement the empty definition body case.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462853840,1462853840,4e6ad9ebf1bcf35c3d7df0aa82d771e9f7151866
4e6ad9ebf1bcf35c3d7df0aa82d771e9f7151866,4e6ad9eb,Add first pass at React component for definitions,"Add first pass at React component for definitions
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462814531,1462814541,62bdaeccbbe409a9aaf8d659002353fa5f2cb201
62bdaeccbbe409a9aaf8d659002353fa5f2cb201,62bdaecc,Hook up native side of adding definitions,"Hook up native side of adding definitions

Also tweak the flow wrapper script to be a little more clear about errors.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462810488,1462810488,130041b40eb8edad4e6824181b3364b3948ae9f1
130041b40eb8edad4e6824181b3364b3948ae9f1,130041b4,Fix evaluation test,"Fix evaluation test
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462804102,1462804102,81a0bd64a03c0b466126bd44e31c8431573548a4
81a0bd64a03c0b466126bd44e31c8431573548a4,81a0bd64,Properly place evaluation results,"Properly place evaluation results

We now send evaluated results to a ""pending"" area where we measure them at the
next render, then have a callback that uses those measurements to set the actual
desired position.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462778034,1462778034,7f15da3b7a60c6a37d01accd62c141b52fa4f47d
7f15da3b7a60c6a37d01accd62c141b52fa4f47d,7f15da3b,Add a system for measuring expression dimensions,"Add a system for measuring expression dimensions

We now have the ability to draw invisible expressions and return their width and
height, which is useful for cases where we need to position something based on
its size.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462776239,1462776239,b83ecb20d4c61c8107dc29016388818b5cb41842
b83ecb20d4c61c8107dc29016388818b5cb41842,b83ecb20,Refactor code to use a top-level DisplayState type,"Refactor code to use a top-level DisplayState type

This makes it easier to add new renderable things other than just the
expressions.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462775103,1462775103,882d558dc9a2029b4e245335df8b29e17984a079
882d558dc9a2029b4e245335df8b29e17984a079,882d558d,Add basic expression evaluation,"Add basic expression evaluation

The result isn't yet centered, which is particularly tricky to do because we
need to know the size of the resulting expression. That will be done in a later
commit.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462774529,1462774568,0f2a72fb862588b3585d6fd6451e24b27b7984d4
0f2a72fb862588b3585d6fd6451e24b27b7984d4,0f2a72fb,Only show execute button for executable expressions,"Only show execute button for executable expressions
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462769254,1462769254,7d8387a19db8463358e48f471ba6a9c46d574383
7d8387a19db8463358e48f471ba6a9c46d574383,7d8387a1,Move babel-cli in package.json,"Move babel-cli in package.json

It looks like babel-node was being installed at an old version, so gen-types
wasn't working anymore. This makes it use the latest version of babel-node.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462768750,1462768750,63125ba274f79ddb7659ea874a674f5a3495b5d1
63125ba274f79ddb7659ea874a674f5a3495b5d1,63125ba2,Add play icon for execute button,"Add play icon for execute button
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462758162,1462758162,c5100775127c49586406911f78a014a2cdde9094
c5100775127c49586406911f78a014a2cdde9094,c5100775,Add first pass at execute button,"Add first pass at execute button

For now it doesn't have an icon and shows up on every non-dragged expression.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462756832,1462756832,64f4ded293296b68102c359906dda4d505f89414
64f4ded293296b68102c359906dda4d505f89414,64f4ded2,Change func call drop target to be the right edge,"Change func call drop target to be the right edge
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462747248,1462747248,36f9f4abed72296a7a074bfed86a69c75ae04887
36f9f4abed72296a7a074bfed86a69c75ae04887,36f9f4ab,Remove variables when they're dropped on parameters,"Remove variables when they're dropped on parameters
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462746269,1462746450,c72207ca0bccf2f99e85113cef029dc11afe898c
c72207ca0bccf2f99e85113cef029dc11afe898c,c72207ca,Highlight dragged expressions,"Highlight dragged expressions

We now compute drop targets for all active drags on every drag event, and store
a boolean for whether or not to highlight in the DisplayExpression. then we
color the expression at render time based on that boolean.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462740880,1462740880,e67424956bfbc69f6378ed1c60b8e6994b42b7b1
e67424956bfbc69f6378ed1c60b8e6994b42b7b1,e6742495,Change drop hit testing to use rect bounds,"Change drop hit testing to use rect bounds

This also overhauls what we store about drag objects. We now keep the screen
rect directly instead of viewing dragged expressions as on the canvas. This
should be even more natural later when we support dragging and panning at the
same time.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462738869,1462738927,4af9c39471c60535f1155216683251908e3651b7
4af9c39471c60535f1155216683251908e3651b7,4af9c394,Remove accidental console.log,"Remove accidental console.log
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462657143,1462657143,262f90be3f56649d83ace8bc3ce252294cfb467d
262f90be3f56649d83ace8bc3ce252294cfb467d,262f90be,Create an intermediate DisplayExpression format,"Create an intermediate DisplayExpression format

This should make it easier to do things like highlighting dragged expressions
and showing reference errors, and it's also nice because it splits some of the
view tracking logic out of React land.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462653934,1462653934,e9db922e9e48bd97dd5096d47b92c8ee7f33d854
e9db922e9e48bd97dd5096d47b92c8ee7f33d854,e9db922e,Rename ScreenExpression to CanvasExpression,"Rename ScreenExpression to CanvasExpression

They're actually on the canvas, not the screen yet, and this leaves room for a
new ScreenExpression type that is used for display purposes.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462547244,1462547244,cd14c8b9a4d6ed5a8489a7dc661f67fc1f807cec
cd14c8b9a4d6ed5a8489a7dc661f67fc1f807cec,cd14c8b9,Implement decomposing expressions and creating lambda vars,"Implement decomposing expressions and creating lambda vars
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462429601,1462429601,b7f4399c09f0a97cb5d73d47b9b29d2e9538e640
b7f4399c09f0a97cb5d73d47b9b29d2e9538e640,b7f4399c,Restructure HitTester code to allow different types of drag results,"Restructure HitTester code to allow different types of drag results
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462423044,1462423044,5213624c2e6ea859802a01806973ef2ff302fe72
5213624c2e6ea859802a01806973ef2ff302fe72,5213624c,Refactor drag starting to use a union,"Refactor drag starting to use a union

This leaves room for different operations happening as the result of a drag.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462422512,1462422512,7592f128c8310d3df9fa6706e2f87732eb402d23
7592f128c8310d3df9fa6706e2f87732eb402d23,7592f128,Implement dropping to create args,"Implement dropping to create args
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462170472,1462170472,f956fae10f2ef9f0712f926bf7521ca2f782816d
f956fae10f2ef9f0712f926bf7521ca2f782816d,f956fae1,Refactor lambda hit testing to use priorities,"Refactor lambda hit testing to use priorities
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462170173,1462170173,1f9602eba8406b333cc1808af1203f4686f17bdb
1f9602eba8406b333cc1808af1203f4686f17bdb,1f9602eb,Allow dropping into empty lambda bodies,"Allow dropping into empty lambda bodies
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462169069,1462169069,79787a150defa80771c3493bbc29c7d212c685e0
79787a150defa80771c3493bbc29c7d212c685e0,79787a15,Generalize view tracking to use a higher-order component,"Generalize view tracking to use a higher-order component

This makes it easier to mark arbitrary views as needing their location tracked
with a particular key.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462156891,1462158296,b9c8a1aca34a2ca62586d85e67152fcfdb132b6f
b9c8a1aca34a2ca62586d85e67152fcfdb132b6f,b9c8a1ac,Refactor dropping to use a DropResult class,"Refactor dropping to use a DropResult class
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462149721,1462150189,201c7084d103ce10a009ba682d957691bcd14020
201c7084d103ce10a009ba682d957691bcd14020,201c7084,Pull out expression modification functions into their own file,"Pull out expression modification functions into their own file
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462142224,1462142224,900d839a2cf243c7eb2087fa0f7ce39b638077a1
900d839a2cf243c7eb2087fa0f7ce39b638077a1,900d839a,Render dragged expressions separately,"Render dragged expressions separately

While an expression is dragged, it no longer has an expression ID, and instead
is ""above"" the rest of the expressions in a certain sense. This makes it easier
to render them differently and makes it so we don't need to worry about dropping
onto dragged expressions.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462137083,1462140340,4937349972beacd346467afca0d18f1d9cf5beb4
4937349972beacd346467afca0d18f1d9cf5beb4,49373499,"Change ""map"" to ""update"" to be consistent with Immutable.js terminology","Change ""map"" to ""update"" to be consistent with Immutable.js terminology
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462136841,1462136841,b93a12f7787acc3c0b93bd2ff165e7dd5ae0f5ce
b93a12f7787acc3c0b93bd2ff165e7dd5ae0f5ce,b93a12f7,Simplify some reducer code,"Simplify some reducer code
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462135791,1462136129,279f959af7e24804d3ff36312ce7a0ad33e9df17
279f959af7e24804d3ff36312ce7a0ad33e9df17,279f959a,Generate map/transform functions for value types,"Generate map/transform functions for value types

This makes it easier to chain transforms in a way that lets you substitute
values deep within a hierarchy.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462089192,1462089192,d71c6bdccce05fe0ea30002a43499920c51839e6
d71c6bdccce05fe0ea30002a43499920c51839e6,d71c6bdc,Use translate instead of left/top,"Use translate instead of left/top

Apparently this is better for performance.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462074207,1462074207,09e95371bf0eb922f4ca1f8d3053bbf07b647cf7
09e95371bf0eb922f4ca1f8d3053bbf07b647cf7,09e95371,Make dragging properly offset for the touch position,"Make dragging properly offset for the touch position

The drag data now contains the offset from the view, which lets us know where to
position things.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462069442,1462069687,50b7e24947e4549933c576a63ced0bbc0f78d5eb
50b7e24947e4549933c576a63ced0bbc0f78d5eb,50b7e249,Implement basic dragging,"Implement basic dragging

It already supports multitouch, which is cool. However, there are still a bunch
of ugly loose ends, like recomputing screen positions.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462068191,1462068191,4e7f5e600170fe89f6a1698bb475794613ef1f74
4e7f5e600170fe89f6a1698bb475794613ef1f74,4e7f5e60,Hook up actions for touches,"Hook up actions for touches

They don't do anything now, but the plan is to keep all touch state in the Redux
store, so Redux will need relatively low-level events. This works out pretty
well in the current model where fingers are independent of each other.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462063202,1462063220,001c5df6ff447e0139a1d2fd31af992a34ddb8a7
001c5df6ff447e0139a1d2fd31af992a34ddb8a7,001c5df6,Add first pass at dragging,"Add first pass at dragging

All we do for now is set the first expression to the touch position, but soon
we'll do more interesting things.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462059032,1462059032,18d05f9e9e6f9c9b76aef0b61954a24fb7b61e3d
18d05f9e9e6f9c9b76aef0b61954a24fb7b61e3d,18d05f9e,Fix crash when making a lambda with an empty body,"Fix crash when making a lambda with an empty body

We weren't properly setting the ref on the child view.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462051795,1462051795,adefe04720328d7da60304eec6b9231482685ded
adefe04720328d7da60304eec6b9231482685ded,adefe047,Implement a ViewTracker class for keeping track of view locations,"Implement a ViewTracker class for keeping track of view locations

For now we never unregister views or deal with views changing position/size
after they're created, but this is at least a good starting point for dragging.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1462002853,1462002853,015a4f15eef2642b78130319ec700939194a350b
015a4f15eef2642b78130319ec700939194a350b,015a4f15,Switch ExprPath to use an immutable list,"Switch ExprPath to use an immutable list
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461998924,1461998924,1d7db073d362cd731f6b18f9534d82a989d8e7bd
1d7db073d362cd731f6b18f9534d82a989d8e7bd,1d7db073,Update parseFlow wrapper to work without flow on the PATH,"Update parseFlow wrapper to work without flow on the PATH
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461996216,1461996216,89c5d05321f9d9aa87ff566fef65385c957d5329
89c5d05321f9d9aa87ff566fef65385c957d5329,89c5d053,Set up port forwarding on `npm run android`,"Set up port forwarding on `npm run android`
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461993795,1461993795,d73d52ca24ad5c92d73ee821ad1e7b88d88e00ea
d73d52ca24ad5c92d73ee821ad1e7b88d88e00ea,d73d52ca,Fix `npm run android` when using a custom node version,"Fix `npm run android` when using a custom node version

This was done by telling `react-native run-android` about a custom ""terminal""
application that really is a script that runs `nvm use` first.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461908534,1461908534,599a6225c57f99696b363abaea7d2c7b13d781e6
599a6225c57f99696b363abaea7d2c7b13d781e6,599a6225,Fix the command line build,"Fix the command line build

I guess the proguard rules needed for retrolambda changed with an
Android SDK/tools update.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461900390,1461900390,93a65079c6ef9e77575151994fda036e6a9569bc
93a65079c6ef9e77575151994fda036e6a9569bc,93a65079,Upgrade React Native to 0.24,"Upgrade React Native to 0.24

This also required adding Stetho explicitly, since it is no longer packaged
with RN.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461899772,1461899772,1b87196796585ea55f1bcda8edde3b83689a5580
1b87196796585ea55f1bcda8edde3b83689a5580,1b871967,Make a little more progress on the build/tooling,"Make a little more progress on the build/tooling

* Add an nvmrc to make it a little easier to use the right node version.
* Add a command for `react-native run-android`. Unfortunately, it seems to fail
  with proguard issues at the moment.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461861950,1461861950,7630128a282ab9fd84387787b67b406057945879
7630128a282ab9fd84387787b67b406057945879,7630128a,Get the app working again,"Get the app working again

Looks like we can't pass an immutable record using connect, which makes sense
because React props have regular names at the top level.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461821751,1461821751,a1e54a25c09d45d406653c88d14a893289a5aea8
a1e54a25c09d45d406653c88d14a893289a5aea8,a1e54a25,Update dependencies for node 6,"Update dependencies for node 6
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461774521,1461774521,e25bdd5e0b39d29fad29daa968483d82bd204e40
e25bdd5e0b39d29fad29daa968483d82bd204e40,e25bdd5e,Consolidate a lot of reducer code,"Consolidate a lot of reducer code

Also, just use exceptions for things like invalid paths rather than propagating
nulls everywhere. Thise should be bugs (or maybe race conditions) anyway, and a
top-level try/catch is probably a fine way to avoid them from breaking too much.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461740458,1461740458,2a4f46ab7cd246a8d8c839f007c80df64d96199a
2a4f46ab7cd246a8d8c839f007c80df64d96199a,2a4f46ab,Implement actions to insert bodies and args,"Implement actions to insert bodies and args

Currently there's some redundancy here, but that will be cleaned up later.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461738544,1461738544,d8de4aee23c4af3ba826c8ff1fde0fcfd710cd66
d8de4aee23c4af3ba826c8ff1fde0fcfd710cd66,d8de4aee,Implement evaluation,"Implement evaluation

This is pretty much just copied from the Java version, but it all seems to work!
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461571885,1461571885,31ac022cac2fbff3355fc11c582f47571869a629
31ac022cac2fbff3355fc11c582f47571869a629,31ac022c,Change the parser to be more flexible about whitespace,"Change the parser to be more flexible about whitespace

Maybe in the future we'll want to actually tokenize expressions, but for now we
can just trim in some particular places, and that's enough to strip whitespace.
This make the predicate definition to be a multiline string.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461566059,1461566059,d5d7ceb086e0a05455e8c444c722fcfe1b672d06
d5d7ceb086e0a05455e8c444c722fcfe1b672d06,d5d7ceb0,Add a simple definition manager and the beginnings of the evaluator,"Add a simple definition manager and the beginnings of the evaluator

The evaluator still doesn't do anything, but now that definitions are possible,
we should be able to do more interesting things in test code without the tests
getting really crazy.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461564023,1461564023,7814b987ce4f4ed753b2cde77e56e23f036a12e5
7814b987ce4f4ed753b2cde77e56e23f036a12e5,7814b987,Upgrade babel version to make generateTypesCli work,"Upgrade babel version to make generateTypesCli work
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461556456,1461556456,05b8d333f8feac87f8efc8c4dff305da873463a3
05b8d333f8feac87f8efc8c4dff305da873463a3,05b8d333,Move type definitions to the top level,"Move type definitions to the top level

Putting them in a special folder was a bit weird and maybe hard to discover.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461553995,1461553995,03c847c833cd48c7009081ceb4fdbe2a1ad68cea
03c847c833cd48c7009081ceb4fdbe2a1ad68cea,03c847c8,Move expression evaluation into a new ExpressionEvaluator file,"Move expression evaluation into a new ExpressionEvaluator file
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461553497,1461553497,fe67a477c90dd017a20d19032e1871904d2b2b85
fe67a477c90dd017a20d19032e1871904d2b2b85,fe67a477,Add initial part of evaluator,"Add initial part of evaluator

It doesn't actually do any evaluating yet, but we now convert it from a
UserExpression to a regular Expression.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461551518,1461551518,1f2e3fc442d698f7f1c69de0fb430f7519096290
1f2e3fc442d698f7f1c69de0fb430f7519096290,1f2e3fc4,Add parseFlow tool to use with WebStorm,"Add parseFlow tool to use with WebStorm
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461550938,1461551034,7dad324a99c0eedfd5eebea2e883322d2222b7b9
7dad324a99c0eedfd5eebea2e883322d2222b7b9,7dad324a,Implement the reducer side of evaluation,"Implement the reducer side of evaluation
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461480231,1461480231,0e3afe2833150abfa77f4b7692a6bedb813a34d2
0e3afe2833150abfa77f4b7692a6bedb813a34d2,0e3afe28,Implement arg decomposition,"Implement arg decomposition
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461478512,1461478512,f3853ffdeb42dc600afc04e2d607bd54261ae00f
f3853ffdeb42dc600afc04e2d607bd54261ae00f,f3853ffd,Change most value types to use immutable records,"Change most value types to use immutable records

Unfortunately, redux actions need to be plain objects, so we need a special case
in the code generator.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461476907,1461476907,d08784ab59179e5e05c27095017b4037c4258251
d08784ab59179e5e05c27095017b4037c4258251,d08784ab,Change state to be a generated type,"Change state to be a generated type
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461470052,1461470052,45df8367f31169d3f0fec798ba599b1e5de288e6
45df8367f31169d3f0fec798ba599b1e5de288e6,45df8367,Change actions to use generated types,"Change actions to use generated types

This makes it cleaner to condition on the actions in the reducer (at least for
now).
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461469534,1461469534,85314d967f4cafc9c231d1ca76d5b2a7f95ec58f
85314d967f4cafc9c231d1ca76d5b2a7f95ec58f,85314d96,Use immutable maps for the state,"Use immutable maps for the state
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461467685,1461467685,df2f099414d3ad957e54e10895a45da4dbdd4890
df2f099414d3ad957e54e10895a45da4dbdd4890,df2f0994,Clean up a few more uses of value types,"Clean up a few more uses of value types
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461467046,1461467046,6e7023d8faafca2f4276f28b8d967e8ca745d5e3
6e7023d8faafca2f4276f28b8d967e8ca745d5e3,6e7023d8,Add a pattern matching mechanism for union types,"Add a pattern matching mechanism for union types
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461459637,1461459637,98afcb06b3c72683c9598b136645556526def4f0
98afcb06b3c72683c9598b136645556526def4f0,98afcb06,Replace old types with new auto-generated types,"Replace old types with new auto-generated types

I don't do anything fancy yet, but maybe soon.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461456988,1461456988,551045304e9072e0e617ea935a9db1ad7de16c4c
551045304e9072e0e617ea935a9db1ad7de16c4c,55104530,First pass at value type generation,"First pass at value type generation

It isn't hooked up yet, but seems to generate code that looks reasonable to me.

The vision is that this will be used for all values types, including unions.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461449252,1461449252,095e423427903745022520403e4f5bbbc6b1909d
095e423427903745022520403e4f5bbbc6b1909d,095e4234,Add some shorthand functions for creating types,"Add some shorthand functions for creating types
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461436947,1461436947,d74bb1e89a2559e57e27471162bb3875941511e9
d74bb1e89a2559e57e27471162bb3875941511e9,d74bb1e8,Initial version of redux action for extracting lambda bodies,"Initial version of redux action for extracting lambda bodies
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461399670,1461399670,508c29e5526303dbf305451ce190318f65998f04
508c29e5526303dbf305451ce190318f65998f04,508c29e5,Get rid of state syncing code,"Get rid of state syncing code

The react side does enough interesting state ownership that it probably makes
sense to just use that moving forward.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461371995,1461371995,7951ef24293144ea6d4125e173438822e624f877
7951ef24293144ea6d4125e173438822e624f877,7951ef24,Add basic tests for store,"Add basic tests for store
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461371977,1461371977,deba8fb79f1af67d7baf8508f687dc68a4436331
deba8fb79f1af67d7baf8508f687dc68a4436331,deba8fb7,Change DebugGlobals to also actually be globals,"Change DebugGlobals to also actually be globals

This makes it a little easier to work in Chrome.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461361544,1461361544,c6730dc07805acb68c71df6c26f6e8e9fbd48207
c6730dc07805acb68c71df6c26f6e8e9fbd48207,c6730dc0,Add a redux action for moving expressions around,"Add a redux action for moving expressions around
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461360945,1461360945,e81ce9cc92a53212d70de98fa1dd5ef401db535c
e81ce9cc92a53212d70de98fa1dd5ef401db535c,e81ce9cc,Make point format a little more disciplined,"Make point format a little more disciplined

We now call them canvas coordinates, although they're used incorrectly now
because they don't account for pan offset.

Also rename the types file to just types.js, since it has become more general.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461359597,1461359597,6d737a17992dbd3f29db2146b1683c61c61469c7
6d737a17992dbd3f29db2146b1683c61c61469c7,6d737a17,Add a way to list the current expressions,"Add a way to list the current expressions

This should make it easier to manually work with expressions by dispatching
actions.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461359127,1461359127,3689996bba42ef766bf16eac1b8d46376edcdd89
3689996bba42ef766bf16eac1b8d46376edcdd89,3689996b,Hook up lambda creation to React Native,"Hook up lambda creation to React Native
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461353581,1461353581,41abdbad1fc8af309a852770478a0a517c0a6395
41abdbad1fc8af309a852770478a0a517c0a6395,41abdbad,Update debug globals code to allow modifications from the Chrome console,"Update debug globals code to allow modifications from the Chrome console

Previously, refreshes wouldn't happen until the next call from native code. Now,
we run a setInterval that runs all the time to force any Chrome-triggered events
to get flushed.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461353293,1461353293,22da01aa580c1887f812b74084f74d5c455a3817
22da01aa580c1887f812b74084f74d5c455a3817,22da01aa,Add a way to add expressions manually,"Add a way to add expressions manually

Unfortunately, it looks like they don't immediately appear, even though render
is called, so I'll have to look into that.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461265283,1461265283,2b81c4d21da2cc8367f3cd8f11901f7603774f4b
2b81c4d21da2cc8367f3cd8f11901f7603774f4b,2b81c4d2,Port expression parsing code from Java,"Port expression parsing code from Java
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461229577,1461229577,dea91808baf6ce3a46518fa2d1c674000599b898
dea91808baf6ce3a46518fa2d1c674000599b898,dea91808,Rename types to be consistent with the Java types,"Rename types to be consistent with the Java types
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461226022,1461226022,ac596fdca3083153283fae4e3b878e40d47a1670
ac596fdca3083153283fae4e3b878e40d47a1670,ac596fdc,"Hook up redux with basic actions, including flow types","Hook up redux with basic actions, including flow types
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461225614,1461225614,bdc8fff649222cc90a257509c5584f4da7728b64
bdc8fff649222cc90a257509c5584f4da7728b64,bdc8fff6,Split expression view code into its own file,"Split expression view code into its own file

It can probably be broken down further, but this is a good first pass.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461138747,1461139157,6048748255103b6abd1a887fed2c0dfa3a328954
6048748255103b6abd1a887fed2c0dfa3a328954,60487482,Add wrapper SimpleComponent class,"Add wrapper SimpleComponent class
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461138535,1461138535,ff834e3de00c222e44d607d19bf8662015b1a950
ff834e3de00c222e44d607d19bf8662015b1a950,ff834e3d,Add flow types everywhere,"Add flow types everywhere

This also required moving stateless functional components to regular classes,
since it looks like flow doesn't support them yet.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461136917,1461136917,c1f782a156189fbccb7ec05e6c295adab949a6d6
c1f782a156189fbccb7ec05e6c295adab949a6d6,c1f782a1,Get flow typechecking with the actual code,"Get flow typechecking with the actual code

Also clean up image names a little, since I thought it was causing problems, but
it actually wasn't.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461130942,1461130942,37f139e21cc53ef408f0018e71f290207ef7f10a
37f139e21cc53ef408f0018e71f290207ef7f10a,37f139e2,Get flow check to work,"Get flow check to work
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461123541,1461123541,ee2e651fe09b0a18123e57d495f387a2e8f94e64
ee2e651fe09b0a18123e57d495f387a2e8f94e64,ee2e651f,Get rid of dummy initial props for React Native,"Get rid of dummy initial props for React Native
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1461122481,1461122481,258f26f2754947aee73d9b247a52ddc24c5d5ca6
258f26f2754947aee73d9b247a52ddc24c5d5ca6,258f26f2,More minor style tweaks,"More minor style tweaks
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460972791,1460972791,49a8add4bd8ee5bedc22a0e5012fbe5739574925
49a8add4bd8ee5bedc22a0e5012fbe5739574925,49a8add4,Tweak styling for empty expression bodies,"Tweak styling for empty expression bodies
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460970029,1460970029,5adbefbd66528de44a4db953d05c377013150cfa
5adbefbd66528de44a4db953d05c377013150cfa,5adbefbd,Tweak styling to look more like original styling,"Tweak styling to look more like original styling
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460963872,1460963872,817f4bb9bfa0c0608f4b8e1d45fad7f45f96c453
817f4bb9bfa0c0608f4b8e1d45fad7f45f96c453,817f4bb9,Add bracket images and use them in expressions,"Add bracket images and use them in expressions
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460963003,1460963003,351a0c8fb523f996a54e6a112d6e87659500bd0a
351a0c8fb523f996a54e6a112d6e87659500bd0a,351a0c8f,Initial version of raw SVG assets,"Initial version of raw SVG assets

I modified these to be the single-density size, which should make it easier to
create pngs from them.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460958127,1460958127,20cd23d8f3809b6ae6945827629471e27bcff2bc
20cd23d8f3809b6ae6945827629471e27bcff2bc,20cd23d8,Get display nearly working with react native,"Get display nearly working with react native

There were some proguard issues to work through and the main activity needed to
be renamed to MainActivity, but `react-native run-android` works now.

Also add a system to serialize and send the state to JS land. There are still
some visual issues, but it's getting closer.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460949586,1460949586,d6029b01f8c5d3a9f303dde665d5b10c65c80af6
d6029b01f8c5d3a9f303dde665d5b10c65c80af6,d6029b01,Restructure code to get closer to native code updating state,"Restructure code to get closer to native code updating state

The native code now sends an event whenever an expression changes, which
currently does nothing.

Also, the canvas JS code now renders from state rather than hard-coding the
data.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460931809,1460931809,af5e42d9514bd881d1e9fd67711a561cb99adb5d
af5e42d9514bd881d1e9fd67711a561cb99adb5d,af5e42d9,Draw the React Native canvas at the bottom half of the screen,"Draw the React Native canvas at the bottom half of the screen

I also give it a slightly different background color so the coordinates are more
visible. This should make it easier to iterate on the view code.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460929221,1460929221,a0d7ef80767a70e70480848077ab8d0f6092027d
a0d7ef80767a70e70480848077ab8d0f6092027d,a0d7ef80,Isolate React Native code into its own class/package,"Isolate React Native code into its own class/package

This should make it a little easier to explore the React Native world while
having it in its own isolated place. The long-term vision is that the
reactnative package goes away, since eventually the whole app will be a react
native app.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460928031,1460928031,0836cf38f9a9d4ef72de16a31739dacd2ff3a439
0836cf38f9a9d4ef72de16a31739dacd2ff3a439,0836cf38,Implement basic expression rendering in React Native,"Implement basic expression rendering in React Native
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460881519,1460881539,044de57961b972d40908b89ba56e969ac15ee1c7
044de57961b972d40908b89ba56e969ac15ee1c7,044de579,Get React Native actually working,"Get React Native actually working

* Add React as a JS dependency.
* Exclude 64-bit libraries so that the RN native library works on Nexus 9.
* Hook up lifecycle events so that RN can correctly grab the Activity.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460799558,1460799558,c79dcb55f0c04a164472abd2e775120cb5f99b7f
c79dcb55f0c04a164472abd2e775120cb5f99b7f,c79dcb55,Mostly hook up React Native,"Mostly hook up React Native

It still doesn't show anything on the screen it seems, but the debug overlay
works and it looks like things are hooked up, just not visible yet.

This also required changing the min SDK version to 16, which is probably fine.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460794243,1460794243,e3f939c8e8c18813407b354f8a4612ce5a050211
e3f939c8e8c18813407b354f8a4612ce5a050211,e3f939c8,Move all code into an android directory,"Move all code into an android directory

This makes room for React Native files.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460789963,1460789963,855dde52790d948a379d5dd02202052d6737f25a
855dde52790d948a379d5dd02202052d6737f25a,855dde52,Update gradle,"Update gradle
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460789170,1460789170,9073725d6825cb3dd50a28e4038d2743d3d941fa
9073725d6825cb3dd50a28e4038d2743d3d941fa,9073725d,Bump version to 1.1.0,"Bump version to 1.1.0
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460574601,1460574601,be5ca045f766a36f253b27c6265dc6ee4a7e6ccd
be5ca045f766a36f253b27c6265dc6ee4a7e6ccd,be5ca045,Change background-setting to always use drawables,"Change background-setting to always use drawables

This fixes a bug on pre-lollipop devices where we would set the background color
to white in some code paths, but really we should set it to the expression
background, which on old devices has a border to account for the fact that there
are no shadows.

This should also make it a little easier to improve the styling for highlighting
at some point.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460479020,1460479020,90ea1dd7140728e712ade8404d24d5f8f9d74326
90ea1dd7140728e712ade8404d24d5f8f9d74326,90ea1dd7,Fix execute button display issue on pre-Lollipop devices,"Fix execute button display issue on pre-Lollipop devices

When we move the expression to the front, we should also bring the execute
button with it so that it stays on top when we place the expression down.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460477709,1460477709,15f29759dcd08300ea31c76d249e03eefacbca27
15f29759dcd08300ea31c76d249e03eefacbca27,15f29759,Place the drag action bar in front when starting a drag operation,"Place the drag action bar in front when starting a drag operation

The dragged expression is then put in front of the drag action bar. This avoids
a case where the second-to-last expression could show up in front of the drag
action bar on pre-Lollipop devices (where child order is used for z-order rather
than elevation).
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460449690,1460449690,b7aa271a2c3de5358f3da7e753f2a1e00c5a82af
b7aa271a2c3de5358f3da7e753f2a1e00c5a82af,b7aa271a,Switch to compat library fragments,"Switch to compat library fragments

Looks like the SDK Fragment class doesn't have onViewStateRestored on API 16 and
earlier, so it wasn't getting called and the FABs weren't having their positions
updated correctly. With compat library fragments, it gets called correctly.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460445745,1460445745,1c1d848946272e08b57747af90fc078623204c8b
1c1d848946272e08b57747af90fc078623204c8b,1c1d8489,Fix FAB positioning on old devices,"Fix FAB positioning on old devices

We now specify useCompatPadding so we get the weird extra padding always. That
padding then defines the spacing between the two buttons, and we explicitly
calculate the container size.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460443650,1460443650,fe96f2ce7111952b570d4676cfc0b88a84474a77
fe96f2ce7111952b570d4676cfc0b88a84474a77,fe96f2ce,Only restrict ACTION_DOWN FAB events to the circle,"Only restrict ACTION_DOWN FAB events to the circle

Previously, you could drag out and the up event would get lost and the FAB would
stay in the clicked state indefinitely.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460437852,1460437852,07628f4c94a63ce81ab56f1fb697dad9e58b1619
07628f4c94a63ce81ab56f1fb697dad9e58b1619,07628f4c,Fix some issues on old Android versions,"Fix some issues on old Android versions

* The extra FAB padding makes the click targets too big; correct by using the
  existing dispatchTouchEvent implementation we were using for the execute
  button.
* Change the z-order within the fragment so that the action bar is above the
  canvas. On devices without elevation, this is necessary.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460436705,1460436705,b3de2a164997509ba14acb79f0f64ffe9721d2b4
b3de2a164997509ba14acb79f0f64ffe9721d2b4,b3de2a16,Fix some display issues with elevation animation when dragging,"Fix some display issues with elevation animation when dragging

We were animating the translation z to 15dp, then to 5dp, but really, we wanted
the effective elevation to switch between those two values. So the translation
value should go between 10dp and 0dp, since that's the offset applied to the
normal elevation. This avoids a situation where the execute button would be too
low or where expressions would end up above the delete bar.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460399197,1460399440,65b18ab6b267fff4f5bab3e00360364e5de84d7f
65b18ab6b267fff4f5bab3e00360364e5de84d7f,65b18ab6,Add numbers to the palette when their definition is added,"Add numbers to the palette when their definition is added

Previously, I would do a null check on the expression to see if it was new
(which was probably wrong anyway). Now I see if it didn't exist in the state
before.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460396714,1460396714,4e8e797294116faae0451082a95b58c1c5754396
4e8e797294116faae0451082a95b58c1c5754396,4e8e7972,Add a title to the definitions palette,"Add a title to the definitions palette

This makes sure that the palette is never completely empty, and hopefully helps
visually distinguish between the two.

This also gets rid of the need for a min width, so I took that out.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460360203,1460360266,f9d8d1396e998b7c6dc5699d436117ea3f14f840
f9d8d1396e998b7c6dc5699d436117ea3f14f840,f9d8d139,"Remove old stepping evaluator, optimize canStep","Remove old stepping evaluator, optimize canStep

We used to do the dumb thing for canStep: just actually step the expression and
see if we get something. Now we instead use a simple recursive walk to see if
there are any lambdas on the left side of a function call, which is much faster
in practice. This was the last use of the old evaulator, so we can now just get
rid of it.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460358302,1460358302,555cd1c4cc24ae9e31a3267d864861fedde9dc82
555cd1c4cc24ae9e31a3267d864861fedde9dc82,555cd1c4,Refuse to show the definition of very large numbers,"Refuse to show the definition of very large numbers

This was an easy way to basically crash the app: enter in a number like 1
million and watch it try to create a million views on the screen. Now, we only
allow displaying numbers up to 30.

I also simplified some string externalization.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460357188,1460357188,eabd3a78ae850471108f6afb4e2e4eb9daf449f4
eabd3a78ae850471108f6afb4e2e4eb9daf449f4,eabd3a78,Externalize a bunch of strings,"Externalize a bunch of strings

This may be all of the remaining ones. It at least is all that I can think of.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460356288,1460356288,1e04ebaf353b685544e06fdd1073ff3ebe7868ff
1e04ebaf353b685544e06fdd1073ff3ebe7868ff,1e04ebaf,Fix bug where execute button would be below expressions,"Fix bug where execute button would be below expressions

I still don't fully understand it, but the execute button was ending up below
the expression after it was picked up and set down. A working solution seems to
be to have it animate its z value alongside the expression. Ideally I'd look
more into the actual default elevation value and make sure that's set correctly,
but this solution seems fine and I can't visually notice any difference.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460355043,1460355043,1171eefa1fc0648e7b4ef37c319bfd65e9d47c78
1171eefa1fc0648e7b4ef37c319bfd65e9d47c78,1171eefa,Start the app out without any definitions,"Start the app out without any definitions

Maybe later I'll add a way to have some default ones, but for now it's good to
start with a blank slate.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460355012,1460355012,e2cd0cd1063687446f922b011551904a137f8b53
e2cd0cd1063687446f922b011551904a137f8b53,e2cd0cd1,Get rid of SimpleExpressionEvaluator,"Get rid of SimpleExpressionEvaluator

We aren't using it anymore, so it's safe to get rid of. Also, since there's no
only one evaluator, just use the generic ""impl"" name for it.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460352760,1460352760,8ab1eca21ac9018ddd2db0369b0ce0defeacf4aa
8ab1eca21ac9018ddd2db0369b0ce0defeacf4aa,8ab1eca2,Don't report all definitions as errors on rotate,"Don't report all definitions as errors on rotate

We were placing the expressions before computing which definitons were valid, so
all references were seen as invalid until the next invalidate.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460352598,1460352662,10a6a3f1cd09c0a0cc34c92f01336e51f995c5d8
10a6a3f1cd09c0a0cc34c92f01336e51f995c5d8,10a6a3f1,Implement automatic numbers,"Implement automatic numbers

This required a few cases:
* When seeing if an expression is valid, if automatic numbers are enabled, we
  allow any number.
* When resolving a definition, if it's a number that isn't defined explicitly,
  we expand it to the proper number term.
* When recognizing an expression, we recognize if it's a number and conver it to
  a number reference.
* When creating a new definition, if the definition is a number that isn't
  defined yet, we pull up its UserExpression as the initial value.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460352296,1460352296,b914cee7f7da7cb9ea4e968949682db642bfa6d2
b914cee7f7da7cb9ea4e968949682db642bfa6d2,b914cee7,Remove thread safety from AppState,"Remove thread safety from AppState

It's not necessary since it should only be modified on the main thread.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460346361,1460346361,1335db27f5ccc41ae41b5d1be7add7c70947eed2
1335db27f5ccc41ae41b5d1be7add7c70947eed2,1335db27,Prepare the code for automatic numbers,"Prepare the code for automatic numbers

This commit adds a currently non-functional check-box for recognizing numbers,
and refactors the code so there's a place for recognizing on expression creation
that a number should be used. Also, we now invalidate definitions on fragment
startup so that errors are shown properly before the first definition is
created.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460345948,1460345948,90dcc5eb5fd639eb1b492fc4c2d719efd5fc9386
90dcc5eb5fd639eb1b492fc4c2d719efd5fc9386,90dcc5eb,Reposition FABs if necessary when adding/removing definitions,"Reposition FABs if necessary when adding/removing definitions
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460336656,1460336656,ecf401bf9dc54900607e2cab03ef914b55355834
ecf401bf9dc54900607e2cab03ef914b55355834,ecf401bf,Implement expression deletion,"Implement expression deletion

A dialog now can be used to remove any expression that was created e.g. by
accident. It shows a Spinner prompting for any definition, and it removes it
from the screen if necessary and from the canvas. References remain intact, but
are marked as errors.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460336072,1460336072,7b251834b0b06d131967731e0cc05797c97c2b42
7b251834b0b06d131967731e0cc05797c97c2b42,7b251834,Fix bug where sometimes a reference would stay invalid,"Fix bug where sometimes a reference would stay invalid

There's an ordering issue when decomposing a function call. We propagate
expression changes before re-attaching the new top-level element, but that means
that that top-level element misses the invalidate call, which sometimes is
necessary. In particular starting with ""FOO := x(FOO)"" and pulling out the FOO
would make the FOO definition no longer circular, but the FOO reference would
stay red. This fixes the issue by just invalidating references whenever
something moves to the top level.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460330301,1460330301,cd250584bd71ae49371c843716b06d4aecdbd953
cd250584bd71ae49371c843716b06d4aecdbd953,cd250584,Rename TopLevelExpressionManager to CanvasManager,"Rename TopLevelExpressionManager to CanvasManager

It manages more than just expressions; it also manages any definitions on the
canvas. It also does palette rendering, so maybe it's still not a perfect name
(or maybe it shouldn't do that), but it's better.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460329600,1460329600,b0b73c27879a5ffa517ba591da7729f367c6daf0
b0b73c27879a5ffa517ba591da7729f367c6daf0,b0b73c27,Fix some issues with dragging elevation,"Fix some issues with dragging elevation

We were changing the z value by 10 pixels, but this had two issues:
* Since it was pixels, it wouldn't be correctly scaled to account for screen
  density.
* Picking up and letting go of an expression during the animation would cause
  the animation to be interrupted and the elevation would be permanently
  lowered.

To fix this, I changed it to animate to the specific elevations rather than
animating by a particular z difference. I also kept these constants as resources
to make it easier for them be dps.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460328931,1460328931,437a6f132d3279dd81b59558fc8a7bb03c005601
437a6f132d3279dd81b59558fc8a7bb03c005601,437a6f13,"Whenever any definitions change, re-color all references","Whenever any definitions change, re-color all references

We now propagate an `invalidateDefinitions` function down the expression tree
whenever there's a change in definitions. This causes any invalid references to
be colored red. I also had to change view drag entering/exiting a little so that
views can have their ""default"" color that they know about.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460321379,1460321379,3a42b238085f099d7b70f9c4884d8a301d489d22
3a42b238085f099d7b70f9c4884d8a301d489d22,3a42b238,Fix crash where the change callback wasn't being properly set for definitions,"Fix crash where the change callback wasn't being properly set for definitions

Ugh, this stuff is complicated. Maybe something more declarative will fix it in
the long run.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460317358,1460317358,ee3afceb467769be438af780d72398983b471866
ee3afceb467769be438af780d72398983b471866,ee3afceb,Change definition state to live in app state,"Change definition state to live in app state

Instead of the definition manager containing the definitions, they live in the
app state and the definition manager reads from the app state whenever it needs
to be invalidated.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460314603,1460314603,43ea0c716df1860c1d37ceb2d6e69c8f439c6a05
43ea0c716df1860c1d37ceb2d6e69c8f439c6a05,43ea0c71,"Rename ""expression state"" to ""app state""","Rename ""expression state"" to ""app state""

Previously it was just the list of expressions. Now, it has the pan position and
the definitions, so ""app state"" is a better name.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460310759,1460310759,bcaecd00048998bd281c711d3c36d73ba6ea6655
bcaecd00048998bd281c711d3c36d73ba6ea6655,bcaecd00,Show the full set of definitions in the definition palette,"Show the full set of definitions in the definition palette

We show them in sorted order, and insert in the proper place when creating a new
definition. This should make definitions a bit easier to work with.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460277416,1460277416,b5ab12234303ca389eb3f291d285a15ac59e8d8b
b5ab12234303ca389eb3f291d285a15ac59e8d8b,b5ab1223,Correctly update all definitions whenever a definition changes,"Correctly update all definitions whenever a definition changes
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460275767,1460275767,65861a01c7a3ed65542a82ecf9d848c9276390d4
65861a01c7a3ed65542a82ecf9d848c9276390d4,65861a01,Invalidate all execute buttons whenever a definition changes,"Invalidate all execute buttons whenever a definition changes
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460274139,1460274139,981ce96ae7e86286d5275b34d05fc9273342f994
981ce96ae7e86286d5275b34d05fc9273342f994,981ce96a,Change pallete lambdas to use the producer code,"Change pallete lambdas to use the producer code

This means that dropping lambdas back will delete them, as long as they're
trivial.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460267358,1460267358,de15ac158a21ed43f30e0886838e2d63417df7de
de15ac158a21ed43f30e0886838e2d63417df7de,de15ac15,"Change phrasing to either say ""remove"" or ""hide"" based on context","Change phrasing to either say ""remove"" or ""hide"" based on context

This should hopefully communicate that getting rid of a definition doesn't
actually delete it for good, it just gets it off the screen.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460266942,1460266942,987eef5aec5f06688cf0766d1433c66d41fdffad
987eef5aec5f06688cf0766d1433c66d41fdffad,987eef5a,Make it possible to remove definitions by dragging them to the top,"Make it possible to remove definitions by dragging them to the top

To do this, I made the delete drop target work with definition views.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460266511,1460266529,8f13627257b0635f49412ae8879f846f0101aad9
8f13627257b0635f49412ae8879f846f0101aad9,8f136272,Fix expression creation to be in the right place,"Fix expression creation to be in the right place

We weren't accounting for the action bar height, and we need to now.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460265884,1460265884,ad68beed156612f9133c5b340dc7ec1eefd0b4e0
ad68beed156612f9133c5b340dc7ec1eefd0b4e0,ad68beed,Make it possible to delete expressions by dragging them to the top,"Make it possible to delete expressions by dragging them to the top

The action bar now can fade away, revealing the ""drag action bar"", which
currently is a big drop target that can delete an expression. I also got rid of
the palette delete drop target, since it's no longer necessary.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460265010,1460265010,1f859d00f0d9189cb2e0ae80fd3ac9ddd078777e
1f859d00f0d9189cb2e0ae80fd3ac9ddd078777e,1f859d00,Move the toolbar from the activity to the fragment,"Move the toolbar from the activity to the fragment

This should make it a little easier to programmatically modify the toolbar.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460259399,1460259399,d22db747f547357fa75006b68f8d87557dbe61f0
d22db747f547357fa75006b68f8d87557dbe61f0,d22db747,Disallow names longer than 8 characters,"Disallow names longer than 8 characters

Mostly just a sanity check, but this also limits the width of the definition
palette, which is nice.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460256480,1460256480,5fe56f6207e33fadface9c286039d6c59f8a0b16
5fe56f6207e33fadface9c286039d6c59f8a0b16,5fe56f62,Disallow circular definitions,"Disallow circular definitions

To implement this, we actually don't need to do cycle detection; we can just
remove the definition before recomputing it, and any reference to it will be
invalid.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460253549,1460253549,c0807ae69b8c8290d22b20322051b556ac3f5e78
c0807ae69b8c8290d22b20322051b556ac3f5e78,c0807ae6,Make the enter key submit definition and variable names,"Make the enter key submit definition and variable names
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460249834,1460249834,ffed632258a413e1a2e7f58f812bf64382daa635
ffed632258a413e1a2e7f58f812bf64382daa635,ffed6322,Polish drawer animation,"Polish drawer animation

Now there's an underlying state independent of the UI that says which drawer, if
any, should be open, and any user operation might change that state and we do
whatever is necessary to move the current UI to that state. For example, if the
user double-taps a drawer button when it's closed, it will switch from opening
to closing even if it never fully opened.

This also required some details where we add a listener that will open the other
drawer when the current drawer is halfway closed, and we need to remove that
listener when performing another user operation. This prevents a subtle type of
bug where a listener can live longer than expected.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460151660,1460151660,334d887d428a9e8e6a44c56571f1cde504284057
334d887d428a9e8e6a44c56571f1cde504284057,334d887d,Correctly restore FAB position on rotate,"Correctly restore FAB position on rotate
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460147967,1460147967,b4c78a2b8f1984272f64ee5fe334b08f120e1522
b4c78a2b8f1984272f64ee5fe334b08f120e1522,b4c78a2b,Make the two palette buttons switch between palettes,"Make the two palette buttons switch between palettes

This required a little more work to keep the FABs properly aligned. There's
still plenty more polish to do.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460104658,1460104658,394e81f815fa8b53589e9e222d56935ec12597c5
394e81f815fa8b53589e9e222d56935ec12597c5,394e81f8,Add some real content for the definition palette,"Add some real content for the definition palette

The code now creates PaletteReferenceControllers, which are like
PaletteLambdaControllers, and puts them on the definition palette. In the
future, the palettes will behave better and the definition palette will have
references for all definitions.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460101633,1460101633,b7110308d0993cdbaa214521939477988ab8727e
b7110308d0993cdbaa214521939477988ab8727e,b7110308,"Rework PaletteView to be injected, properly style both palettes","Rework PaletteView to be injected, properly style both palettes

Also fix a bug where we were accidentally sliding in the drawer on init always.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460099334,1460099334,5154deb33673d4922283f5208b23409f6ed9beb3
5154deb33673d4922283f5208b23409f6ed9beb3,5154deb3,Overhaul app structure and add dummy definition palette,"Overhaul app structure and add dummy definition palette

Now all ButterKnife bindings are done directly in the dagger module. This
might be a pain if we end up wanting multiple screens, but it's pretty nice for
now and avoids a lot of the boilerplate of passing views around. Rather than
making views injected, they're just fields that can be accessed, for now, which
works since we don't use @Inject anywhere and everything is in one big module.

I also created a simple definition palette using nested DrawerLayouts and moved
the DrawerLayout code into its own class. Soon, it will get more interesting,
since it'll need to manage two drawers and the corresponding transitions.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460097816,1460097984,9b817d68a6fda55f161dd24119e3565f77fc694b
9b817d68a6fda55f161dd24119e3565f77fc694b,9b817d68,Add validation for variable and definition names,"Add validation for variable and definition names

Variables can only contain lower-case letters. Definitions can only contain
capital letters and symbols. This ensures that there's no possibility of having
a node that could be either.

I also pulled the code out into a separate class instead of it being in the
fragment.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460089137,1460089137,93c17fef4383a8b84d013f6fd390014043024eeb
93c17fef4383a8b84d013f6fd390014043024eeb,93c17fef,Implement lambda creation,"Implement lambda creation

It works pretty much like definition creation. Maybe the code could be shared,
but it's probably fine to have this duplication for now.

I also changed the dagger mechanism to allow the fragment to inject things like
the point converter. In the future it may be good to push fragment logic into
injected classes, but this commit certainly works.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460087194,1460087194,952181e5f86c09c1fb0dd533144564b2b0b3c0e5
952181e5f86c09c1fb0dd533144564b2b0b3c0e5,952181e5,Make FABs follow pallete as it opens and closes,"Make FABs follow pallete as it opens and closes

This adds a new placeholder ""create lambda"" FAB and makes both translate along
with the navigation drawer.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1460085870,1460085870,af723d0b96aa318344d6b2ac23a6e5a379ac17b8
af723d0b96aa318344d6b2ac23a6e5a379ac17b8,af723d0b,Use ButterKnife to bind fragment children,"Use ButterKnife to bind fragment children
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459969607,1459969607,f3df25c0facd339bab0ab7df05eaa3aefce1b4a4
f3df25c0facd339bab0ab7df05eaa3aefce1b4a4,f3df25c0,Add FAB for creating definitions,"Add FAB for creating definitions

Right now it's redundant with the action bar button, but the action bar button
will still be there as a drawer toggle, so I'll leave it in for now.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459968469,1459968469,29e344d05bbe204dc1e9863f6fc5bf40e21db4b1
29e344d05bbe204dc1e9863f6fc5bf40e21db4b1,29e344d0,"Change definition dialog warning, use app bar icon","Change definition dialog warning, use app bar icon
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459965012,1459965012,6a193af9e2b20ae3268e7a72d18eba44c643c690
6a193af9e2b20ae3268e7a72d18eba44c643c690,6a193af9,"When defining an existing term, show it instead","When defining an existing term, show it instead

This even works for terms that are in the definition manager but not on the
palette. This required refactoring the definition manager to also store
UserDefinitions.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459922204,1459924071,87a1ba400d5ad1ad43197f2b4267d49141d75350
87a1ba400d5ad1ad43197f2b4267d49141d75350,87a1ba40,Disallow duplicate definitions,"Disallow duplicate definitions

If you create a definition that already exists, it now just moves the existing
definition into view rather than making two of them.

In the future, this mechanism will also let you show definitions that have been
saved.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459919389,1459919389,91b9d9f5a66bda3d86c501a92016127da6a96e40
91b9d9f5a66bda3d86c501a92016127da6a96e40,91b9d9f5,Improve styling for definition dragging,"Improve styling for definition dragging

Now it grows and shrinks when you pick it up, just like expressions. For now,
the code is just copied, since it's really short.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459916484,1459916484,61c2824af26831be5d59b32804d96e4a30805142
61c2824af26831be5d59b32804d96e4a30805142,61c2824a,Add an SVG asset for the definition symbol,"Add an SVG asset for the definition symbol
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459915907,1459915907,4d60ffc178bb36ec318243e195a8bd7787f468b4
4d60ffc178bb36ec318243e195a8bd7787f468b4,4d60ffc1,Deconflict variable names when converting to expressions,"Deconflict variable names when converting to expressions
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459912354,1459912354,e8d778d47460b8c37752a75fc25d2bfd3314c70b
e8d778d47460b8c37752a75fc25d2bfd3314c70b,e8d778d4,Give an error when the result of an evaluation is a giant expression,"Give an error when the result of an evaluation is a giant expression
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459840554,1459840554,af59b8013bfa23789348934f8a3aafeae1bbbd56
af59b8013bfa23789348934f8a3aafeae1bbbd56,af59b801,Change evaluation to use the new evaluator,"Change evaluation to use the new evaluator

I also added some new things like time limiting to avoid regressions. We also
now show a friendly toast when anything goes wrong, and maybe in the future that
will be useful in other cases (e.g. the expression is so big that we'd rather
not return it).
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459830236,1459830236,35e18d8bf9f0560148916d67c3063e5b0249d88a
35e18d8bf9f0560148916d67c3063e5b0249d88a,35e18d8b,Fix some more evaluator problems,"Fix some more evaluator problems

We now are more careful about what to evaluate and what not to evaluate. In a
function call, we only try evaluating the right side if the left side looks like
it isn't going to change anymore. That determination is done by keeping track of
which unbound variables are ""fixed"", i.e. they are from lambdas that will never
progress.

Also, there are cases where varMarkers might actually be reused; they are
generated at compile time and correspond to a variable in the original code, but
we might have nested functions that have the same source function, which can
break substitutions. To fix this for now, I don't traverse into a lambda
matching the current varMarker when doing substitution. But that may be just
papering over the problem and a better solution may be a good idea in the long
run.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459815540,1459816121,327b3c46c3d952fad4979c675b5a3823da602c45
327b3c46c3d952fad4979c675b5a3823da602c45,327b3c46,Fix some evaluator problems,"Fix some evaluator problems

When doing substitution, we need to account for substitution within slots. We
can do that by just wrapping it in a lambda, which is basically just a way to
defer work.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459750517,1459750517,99eab2adcc87c9839cf33949cf851bd5c7f7b0c4
99eab2adcc87c9839cf33949cf851bd5c7f7b0c4,99eab2ad,First pass at an optimized evaluator,"First pass at an optimized evaluator

This still has some problems, but seems closer to a correct solution.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459744569,1459744569,aa2507e6f4602e2ead2ac28548803edd10f33f15
aa2507e6f4602e2ead2ac28548803edd10f33f15,aa2507e6,Refactor expression evaluation into a class,"Refactor expression evaluation into a class

This should make it easier to experiment with different evaluation strategies.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459732021,1459732021,eb0236bda98c22379d8c9fc115e89a0609d5e958
eb0236bda98c22379d8c9fc115e89a0609d5e958,eb0236bd,Update tests to almost include factorial,"Update tests to almost include factorial

The real factorial function doesn't work quite yet.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459715979,1459716066,54beb8f57bfa92f5fb2fae019c8ac09be2d6b21a
54beb8f57bfa92f5fb2fae019c8ac09be2d6b21a,54beb8f5,"Fix predecessor function in tests, improve performance","Fix predecessor function in tests, improve performance

We now evaluate the argument before the function when evaluating function calls.
In some cases this avoids an exponential blowup that was causing really bad
performance issues.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459674648,1459674648,9546abed5efc152a6d3a989e07441ef041209aaa
9546abed5efc152a6d3a989e07441ef041209aaa,9546abed,Add some tests for the evaluator,"Add some tests for the evaluator

This makes it easier to track down why PRED(3) is so horrendously slow.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459670646,1459670646,97edc421ae1584f786e081ce95506eb10c308b9c
97edc421ae1584f786e081ce95506eb10c308b9c,97edc421,Make definitions update in the definition manager,"Make definitions update in the definition manager

If an invalid expression is given as a definition, it is defined as null, which
makes all expressions that use it invalid. This can cause execute buttons to get
out of date and other bugs like that, which will be fixed in the future.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459651123,1459651123,c6c2ef7a78d08ff30bd9678702dba332b19e6fe5
c6c2ef7a78d08ff30bd9678702dba332b19e6fe5,c6c2ef7a,Add a way to create definitions using the action bar,"Add a way to create definitions using the action bar

For now, a dialog pops up asking for the name, and it gets created at
(50dp, 50dp). There isn't any validation yet.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459642990,1459643052,302dc2353220883e4172c62945bf4ecaa0a2b14e
302dc2353220883e4172c62945bf4ecaa0a2b14e,302dc235,Move options menu code from the activity to the fragment,"Move options menu code from the activity to the fragment

It's easier to have everything in one place, especially in the future where we
may want the action bar to create expressions.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459639779,1459639779,9c340c3cadd53ea5222764e08f4226daee9f668c
9c340c3cadd53ea5222764e08f4226daee9f668c,9c340c3c,Make it possible to drag expressions for definition expressions,"Make it possible to drag expressions for definition expressions

This can reuse a lot of the code for lambdas. The actual contents aren't hooked
up yet, though.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459638740,1459638740,f5e61a90046ed622696604320d95fb05ce042fda
f5e61a90046ed622696604320d95fb05ce042fda,f5e61a90,Change definitions to use ProducerController,"Change definitions to use ProducerController
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459588796,1459636446,0a8a5fc1d403f227ddc7c3bca02e176df9004f6d
0a8a5fc1d403f227ddc7c3bca02e176df9004f6d,0a8a5fc1,"Move names away from ""parameter"" and ""body""","Move names away from ""parameter"" and ""body""
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459587662,1459587662,456aeee6b7eff359dff53ab8578886b6e369796b
456aeee6b7eff359dff53ab8578886b6e369796b,456aeee6,Pull out the parameter producer logic into a ProducerController class,"Pull out the parameter producer logic into a ProducerController class
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459587429,1459587429,5fc5e718aa4b9c959f68a7fd51eab3997473759f
5fc5e718aa4b9c959f68a7fd51eab3997473759f,5fc5e718,Pull out view code for lambda parameters into a ProducerView class,"Pull out view code for lambda parameters into a ProducerView class

This will hopefully be usable by the definition code later.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459586399,1459586399,043ea9f0be62d1689721bcfb15fb1392e0d9cf4f
043ea9f0be62d1689721bcfb15fb1392e0d9cf4f,043ea9f0,Pull out the slot controller code into its own class,"Pull out the slot controller code into its own class

The separation seems not great currently, but it's still probably better to
split it up, and this should allow reuse for definitions regardless.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459585937,1459585937,a860f63493703c4a602390f27c0d679b90e1bae0
a860f63493703c4a602390f27c0d679b90e1bae0,a860f634,Pull lambda body code out into its own SlotView class,"Pull lambda body code out into its own SlotView class

This should make it easier to reuse that code for definitions, including the
tricky details of detaching from and attaching to the parent. This commit just
deals with the view code, but hopefully the controller code can be pulled out as
well.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459583804,1459583804,62b982138256f9b7b661c6a7a7b701119b0b03b6
62b982138256f9b7b661c6a7a7b701119b0b03b6,62b98213,Add the ability to drag references out of definitions,"Add the ability to drag references out of definitions

This is similar to the way that variables can be created from lambda parameters.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459565408,1459565408,c922482df92411ca521f0fefe0f330eadaed2854
c922482df92411ca521f0fefe0f330eadaed2854,c922482d,Add dragging for definitions,"Add dragging for definitions

The state class now keeps track of both expressions and definitions, and stores
the point of each. Still lots to do, but the position seems to be correctly
kept, just like with top-level expressions.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459564070,1459564084,ecf81d993ab2fe5c62dc0e61b7c701ab77f4a80d
ecf81d993ab2fe5c62dc0e61b7c701ab77f4a80d,ecf81d99,Refactor dragging to use a generic DragData class,"Refactor dragging to use a generic DragData class

Instead of dragging always having an expression as its data, there's now an
interface for it, which can later be used for definitions.

To make it easier to implement drop target, a drop target can have a type
parameter which is the subclass of DragData that it accepts. This will be useful
because definitions won't be able to be dropped in many places.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459561319,1459561319,e5e8c170b4d5e03e34b19d25e3680961fcfeafeb
e5e8c170b4d5e03e34b19d25e3680961fcfeafeb,e5e8c170,Add an initial version of definitions,"Add an initial version of definitions

Definitions are another top-level element, like top-level expressions. They're a
bit different, though, because they can't be dragged into expressions. This may
require extending the dragging framework, but for now, you can't drag them.

In the future, they will be draggable, they'll allow actual bodies, and they'll
be hooked up to the definition manager. Fow now, they're just pannable.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459556812,1459556812,0cf0ba2ff46d1019ddb339b192e93a946dc2d951
0cf0ba2ff46d1019ddb339b192e93a946dc2d951,0cf0ba2f,"On evaluation, collapse defined terms into definitions if possible","On evaluation, collapse defined terms into definitions if possible
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459385636,1459385636,b8337266207439740971102565b729e57db25255
b8337266207439740971102565b729e57db25255,b8337266,Move definition resolution into a DefinitionManager class,"Move definition resolution into a DefinitionManager class
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459317229,1459317229,bb9c1d612febba4a2d4ec01b86deec0be7c520b6
bb9c1d612febba4a2d4ec01b86deec0be7c520b6,bb9c1d61,Change UserExpressions to an injected UserExpressionEvaluator class,"Change UserExpressions to an injected UserExpressionEvaluator class

It'll need access to the user-defined definitions, so we can't really make it a
pile of static functions anymore.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459315832,1459315832,100b0f67d43ce17e61f2798212f923aeb0ebec1a
100b0f67d43ce17e61f2798212f923aeb0ebec1a,100b0f67,Add first pass at reference expressions,"Add first pass at reference expressions

It's impossible to create them for now, but the implementation was pleasantly
simple. They behave just like normal variables, but when converting to full
lambda expressions they expand to more than just lambda variables. In the
future, there will be a system for keeping track of definitions and eventually
modifying them.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459314723,1459314723,6295cbc44b1e8a6e1252cbca5fa1291664f3d9d8
6295cbc44b1e8a6e1252cbca5fa1291664f3d9d8,6295cbc4,Bump version to 1.0.2,"Bump version to 1.0.2
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459241595,1459241595,734b28c37c2d7c0c469c79a5de222fdbda59f5ea
734b28c37c2d7c0c469c79a5de222fdbda59f5ea,734b28c3,Make text a little bigger on tablets and a little smaller on phones,"Make text a little bigger on tablets and a little smaller on phones

This is probably a change for the better anyway, and will hopefully convince
Google that this app is designed for tablets.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459241547,1459241547,1d17587ab3754abd368bded9925774f54a793530
1d17587ab3754abd368bded9925774f54a793530,1d17587a,Bump version to 1.0.1,"Bump version to 1.0.1
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459239843,1459239843,a26aa3314e9ab64a81a5ac264fecc7d4f916e45c
a26aa3314e9ab64a81a5ac264fecc7d4f916e45c,a26aa331,Explicitly declare tablet support in the manifest,"Explicitly declare tablet support in the manifest

I'll try releasing this and seeing if it stops saying ""designed for phones"" in
the tablet play store. If this doesn't work, I can try making a dummy
tablet-specific layout xml or something like that (or actually changing the font
size for tablets or something).
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459239385,1459239385,3dbd6a35d16e3cdb6f84c057ae5ebe1603cd8074
3dbd6a35d16e3cdb6f84c057ae5ebe1603cd8074,3dbd6a35,Replace brackets with SVG assets,"Replace brackets with SVG assets

Originally from https://upload.wikimedia.org/wikipedia/commons/8/86/Brackets.svg
then modified in inkscape and imported into Android Studio. This should appease
a warning about not having proper densities, and maybe make things more
tablet-friendly.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459237136,1459237266,96e27124fe5ef65bd3ed441c48eeba68c260ad1b
96e27124fe5ef65bd3ed441c48eeba68c260ad1b,96e27124,Fix execute button positioning on pre-Lollipop devices,"Fix execute button positioning on pre-Lollipop devices

The old FAB implementation expands the button size so that it can draw a shadow,
which was messing with my positioning code. Now, the code uses the center and dp
measurements rather than relying on the width, height, or top-left of the FAB.

A related problem was that the hit box was much bigger for pre-Lollipop FAB. To
fix this, I wrote a custom dispatchTouchEvent implementation that checks the
button radius and only deals with events that are within that radius from the
center of the button.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459220566,1459220566,238119dcfdba37669fbe2e43354de8b62cbfb7fe
238119dcfdba37669fbe2e43354de8b62cbfb7fe,238119dc,Set up ProGuard,"Set up ProGuard

I have it set to minify but not obfuscate in both debug and release. This should
avoid nasty broken-only-in-release bugs and avoid some of the debugging
headaches proguard can have. The APK size is now about 1.2MB, and it would be
950KB with full obfuscation and optimization, which doesn't seem worth it.

This also required upgrading RxJava. I also removed the RxAndroid dependency,
since it turned out I wasn't using it.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459214626,1459214765,c925aca37bebccd1f4032c7849eb77e7b83f9920
c925aca37bebccd1f4032c7849eb77e7b83f9920,c925aca3,Replace play button graphics with vector graphics,"Replace play button graphics with vector graphics

Now I don't need to worry about finding a xxxhdpi version, since it'll just work
automatically.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459210825,1459210825,3565008e709006020d7d304b1dae434145402ea7
3565008e709006020d7d304b1dae434145402ea7,3565008e,"Update build dependencies, remove autovalue imports","Update build dependencies, remove autovalue imports
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459209603,1459209603,abc0007f013d8d044f0ff15ec361419f98d0adfd
abc0007f013d8d044f0ff15ec361419f98d0adfd,abc0007f,Update README,"Update README
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459155255,1459155255,7fe05ac27358d16d9cdf0489195492739156a900
7fe05ac27358d16d9cdf0489195492739156a900,7fe05ac2,Add app-release.apk to gitignore,"Add app-release.apk to gitignore
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459150649,1459150649,2a467a16ba49a1f6704b7587b1d128ce3b160387
2a467a16ba49a1f6704b7587b1d128ce3b160387,2a467a16,Add a link to the demo video,"Add a link to the demo video
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459135488,1459135514,08769ebe29a3930f32b1b2dec241d6ce7bd58d21
08769ebe29a3930f32b1b2dec241d6ce7bd58d21,08769ebe,Make new expressions appear above the palette for the initial drag,"Make new expressions appear above the palette for the initial drag

This required restructuring the view hierarchy into a normal ""canvas root"" and a
special ""above palette root"". Expressions from the palette start their life in
the above palette root, then move to the canvas root after being dropped for the
first time. This was done by passing around both RelativeLayouts and doing a
special detach operation on the first endDrag.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459066902,1459067400,a2b175940eafe1fc0b4386a914d2e170e4f77376
a2b175940eafe1fc0b4386a914d2e170e4f77376,a2b17594,"Update launcher icon, add xxxhdpi icons where I have them","Update launcher icon, add xxxhdpi icons where I have them
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459061189,1459061189,50426890f4d1686dd54a0584e0b10ccf0ea51009
50426890f4d1686dd54a0584e0b10ccf0ea51009,50426890,Show borders around expressions on API versions <20,"Show borders around expressions on API versions <20

Older API levels don't support shadows, so we instead just draw a simple border
around all expressions that looks a little like a shadow. This avoids
expressions looking too awkward when they get really nested, and makes the drag
handles a little more clear.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459049021,1459050907,36b8362917e94096dd70fee0955def46ab878262
36b8362917e94096dd70fee0955def46ab878262,36b83629,Use a consistent green color for expression highlighting,"Use a consistent green color for expression highlighting

The color was transparent, which meant that top-level expressions were darker
due to the background. The new color is opaque, so should be consistent.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459041374,1459041374,5257337e80b64e3c0aee52dbdd41e9115e77e3bc
5257337e80b64e3c0aee52dbdd41e9115e77e3bc,5257337e,Give elements the highest z-order when dragging them,"Give elements the highest z-order when dragging them

On older devices, it was possible to drag an expression below another one, which
looked weird.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459041106,1459041106,5b7d4c9b59cef0ecf0a68e89ea0afe7c3b2d5988
5b7d4c9b59cef0ecf0a68e89ea0afe7c3b2d5988,5b7d4c9b,Rework colors to work even on old devices,"Rework colors to work even on old devices

There was some old code setting the canvas color that didn't really make sense
anymore. The new approach is to just set a background property on the right
RelativeLayout.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459040725,1459040725,3b04313523b9c6fc58c5ec843b3cb733590d8217
3b04313523b9c6fc58c5ec843b3cb733590d8217,3b043135,Set min API level to 15 and fix compat crashers,"Set min API level to 15 and fix compat crashers

This mostly involved creating a new Compat class where we keep all of our
version checks. This ended up not being so bad. There are still some visual
issues on other versions/themes, so I'll need to figure that out in a later
commit, but the app certainly works on old versions with this commit.

I only tested on 16 (genymotion doesn't have images for API 15), but lint
doesn't complain, so I might as well throw it in.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1459038295,1459038295,86a9b07d31f83ab70d4ac97fc5f113f3264722d5
86a9b07d31f83ab70d4ac97fc5f113f3264722d5,86a9b07d,Don't give up on apparent infinite loops,"Don't give up on apparent infinite loops

If evaluation runs for 100 steps, we now just output that resulting expression
instead of not outputting anything. This makes it so you can write things like
the Y combinator and see them work.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458982330,1458982330,a5e544871ea41e0aa34f3938b195b0f4bb438d4e
a5e544871ea41e0aa34f3938b195b0f4bb438d4e,a5e54487,Minor cleanups,"Minor cleanups
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458982039,1458982039,3292690b6e7c2bb4713e9bfcd2a7795848ac53bc
3292690b6e7c2bb4713e9bfcd2a7795848ac53bc,3292690b,Change last remaining cases from pixels to dps,"Change last remaining cases from pixels to dps

These were cases where we were setting measurements programmatically in a way
that's a little hard to do in XML, so I just convert from dps to pixels
directly.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458980394,1458980394,48b237bee8111553d6cf075eebfcfa0584144b95
48b237bee8111553d6cf075eebfcfa0584144b95,48b237be,Change expression styles to be specified in XML,"Change expression styles to be specified in XML

This also required being more careful about the root to use when inflating
views.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458964504,1458964774,7dee6b407a05acb1fab7bc4f7b7432be98aca30a
7dee6b407a05acb1fab7bc4f7b7432be98aca30a,7dee6b40,Fix display bug when creating a function call at the top level,"Fix display bug when creating a function call at the top level

When expressions switch between top-level expressions and non-top-level
expressions, their LayoutParams need to change because they're living in a
different layout. When a normal expression was added to the top level and then
moved back, it would lose its styles, which caused a display bug where
expressions would have border size 0. The old way to fix this was to have code
that would re-clobber the LayoutParams with the normal ones for expressions when
it changes to not be a top-level expression.

The new approach is more careful: we keep track of the original LayoutParams
when an expression switches to being top-level, then restore it when we detach
it. However, this required another change to make us more disciplined about how
we modify the view hierarchy. Previously, we would eagerly (and redundantly)
detach the left-side view when creating a function call, to avoid a view with
duplicate parents, but that messed this case up. Now, we only detach things that
are already attached, and we shift the order of function call creation so that
we first detach, then reparent, then attach.

It's more code everywhere, but should be easier to reason about and is a cleaner
solution since there isn't any code reaching into the view hierarchy to modify
it.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458963235,1458963621,53da926af075059bbf981b124db7c6706ee70110
53da926af075059bbf981b124db7c6706ee70110,53da926a,Change styleLayout to be an internal function in the renderer,"Change styleLayout to be an internal function in the renderer

This causes a regression, which will be fixed in the next commit: when creating
a new view like a function call, we end up re-styling the top-level view from
being in a realtive layout to being in a linear layout, which is why we needed
to call this style function. I think a way to fix this is to make another
""container"" view in the view hierarchy for top-level expressions. The container
view always lives in a relative layout, and normal expressions always will live
in a linear layout.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458953034,1458953034,b38703c5b41d26b0b6802c11f9b91ed810412e7e
b38703c5b41d26b0b6802c11f9b91ed810412e7e,b38703c5,Fix bug where execute button would get smaller at the edge of the screen,"Fix bug where execute button would get smaller at the edge of the screen

Just like we did with LinearLayouts, we can fix this with a custom FAB subclass
that ignores the measureSpec.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458951054,1458951054,74f491b2e53cbbe3664a9bb5992539b786ea0a5c
74f491b2e53cbbe3664a9bb5992539b786ea0a5c,74f491b2,Move bracket styles to XML,"Move bracket styles to XML
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458950615,1458950615,9d1b988dcb1168d56a4215a2c1391bec13b06023
9d1b988dcb1168d56a4215a2c1391bec13b06023,9d1b988d,Replace expression text renderer with XML,"Replace expression text renderer with XML
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458950122,1458950221,b8e6b7708de69f55fad7b653190574e4eb99ca4b
b8e6b7708de69f55fad7b653190574e4eb99ca4b,b8e6b770,Replace missing body renderer with XML,"Replace missing body renderer with XML

This also converts the sizes to dps, which is nice. A downside is that it might
make scaling hard later, but still, it's probably best to try to stick with
Android best practices, since it makes other things easier.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458949053,1458949165,340e90819c57768b57e359e67fc3b2fd5a59902e
340e90819c57768b57e359e67fc3b2fd5a59902e,340e9081,Redo import ordering,"Redo import ordering

I had accidentally optimized all imports with the wrong Java style config. This
changes it back to the default Android Studio order.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458947811,1458947811,ecefe7a45c1a9fabdfd0120e4171df83ab572b54
ecefe7a45c1a9fabdfd0120e4171df83ab572b54,ecefe7a4,Change LayoutInflater and root view to be injected,"Change LayoutInflater and root view to be injected
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458947744,1458947744,2157b4e3e0660c7fc8f9414eefceb95a43dfd56e
2157b4e3e0660c7fc8f9414eefceb95a43dfd56e,2157b4e3,A few other minor inspection fixes,"A few other minor inspection fixes
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458896763,1458896763,8416a6d649ae60add04727afe472fd9ee0f8b4eb
8416a6d649ae60add04727afe472fd9ee0f8b4eb,8416a6d6,Use the lambda-based visitor pattern for UserExpression,"Use the lambda-based visitor pattern for UserExpression
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458896181,1458896181,673f632c0888989128d132d0a383036572954fb4
673f632c0888989128d132d0a383036572954fb4,673f632c,"Change UserExpression classes to use AutoValue, other cleanups","Change UserExpression classes to use AutoValue, other cleanups
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458895601,1458895601,f460cafb65cda7f8295a06e8bdf88c3c41afa7ec
f460cafb65cda7f8295a06e8bdf88c3c41afa7ec,f460cafb,"Fix some inspections, optimize imports","Fix some inspections, optimize imports
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458894587,1458894587,287f8dc8e8b42c158f094a56392e860246cc0712
287f8dc8e8b42c158f094a56392e860246cc0712,287f8dc8,"Switch to the design support library FAB, define it in XML","Switch to the design support library FAB, define it in XML
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458893952,1458893952,5bb3707bcba5aa374eff61689054f6f0156e9ef1
5bb3707bcba5aa374eff61689054f6f0156e9ef1,5bb3707b,Remove some unnecessary files from the repo,"Remove some unnecessary files from the repo

I think that some .idea files can be useful to keep, but for now we'll just get
rid of all of them. .iml files are annoying because they can get regenerated
when changing build.gradle.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458891220,1458891220,bec523b9be0b34d311c624645b6851f1b0e38779
bec523b9be0b34d311c624645b6851f1b0e38779,bec523b9,Move hard-coded colors to colors.xml,"Move hard-coded colors to colors.xml
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458890783,1458890783,84781bf6cb7acf8f1728b24a66f49aada5563866
84781bf6cb7acf8f1728b24a66f49aada5563866,84781bf6,Change System.out.println to Log everywhere,"Change System.out.println to Log everywhere
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458887205,1458887205,18cb1078b8d95a02fd629afc4a2772e4f66656b8
18cb1078b8d95a02fd629afc4a2772e4f66656b8,18cb1078,Make the highlight shade of green a little softer,"Make the highlight shade of green a little softer
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458875495,1458875510,f1aa7f3ff96fe78be1db012db1dd374fcac8e16a
f1aa7f3ff96fe78be1db012db1dd374fcac8e16a,f1aa7f3f,Animate the palette drawer open on app startup,"Animate the palette drawer open on app startup
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458868148,1458868148,686b742a4660e36e665a61c91a748b54f8e630c3
686b742a4660e36e665a61c91a748b54f8e630c3,686b742a,"Oops, forgot to add the images for the last commit","Oops, forgot to add the images for the last commit
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458868029,1458868029,374ce3aa53205b4fc03a7b82bb2d0e67977e8be1
374ce3aa53205b4fc03a7b82bb2d0e67977e8be1,374ce3aa,Add brackets and parens to make the grouping more clear,"Add brackets and parens to make the grouping more clear

This takes away some of the magic because you're no longer just rearranging
cards, but it looks like it makes the grouping way more clear and makes it so
you don't need as much precision to place a lambda in the right place. It looks
a lot nicer when the parens and brackets stretch to fit their height, but that's
hard to do with regular text, it seems, so I used ImageViews instead, since
those can be stretched programmatically.

Since I'm using images, it's easiest to just make them black, so for now all
text is black. But in the future it may be nice to switch back to the dark gray
color that it was before (or whatever is in the theme).
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458866635,1458866635,320ad2ee9063cb2be2d09c494d2990aeda547d66
320ad2ee9063cb2be2d09c494d2990aeda547d66,320ad2ee,Use a lambda icon for opening/closing the palette,"Use a lambda icon for opening/closing the palette

The icon itself could probably use some work, but is better than the old
""Palette"" text, probably.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458781468,1458781468,b2412c2980acf38c214f2c09f167c74fbfea6676
b2412c2980acf38c214f2c09f167c74fbfea6676,b2412c29,Don't allow expression deletion when the palette is closed,"Don't allow expression deletion when the palette is closed

Previously it would delete expressions that were dragged to the right side of
the screen, but this was annoying. Now it's much more comfortable to work with
expressions because you can just close the palette and not worry about
accidentally deleting things, and panning lets you work with larger expressions.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458777229,1458777229,e1a59b9567b9600f51c78f9956e31d63bdcbd24f
e1a59b9567b9600f51c78f9956e31d63bdcbd24f,e1a59b95,Change the palette to be a right-side drawer,"Change the palette to be a right-side drawer

I also refactored a lot of code to rely more on XML instead of constructing
everything programmatically.

This required some hacks/tweaks where we ignore a bunch of touch events so that
the user can interact with things while the palette is open. Maybe in the future
I'll be able to make it smarter and make it possible to dismiss or scroll the
palette in a more intuitive way by recognizing the gesture.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458776255,1458776255,4676b1716f6dd3a77023d986edd33479cdbf12f5
4676b1716f6dd3a77023d986edd33479cdbf12f5,4676b171,Center lambda expressions in the palette,"Center lambda expressions in the palette

This makes it look a lot nicer, I think.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458769083,1458769083,8701469704eaf37495a0a94e20982f96e65c4a1c
8701469704eaf37495a0a94e20982f96e65c4a1c,87014697,Rework palette styles,"Rework palette styles

Instead of putting it in a hard-coded position designed for landscape Nexus 9,
we now align it to the right of the screen and put it in a ScrollView. I also
had to do some tricks to get the ScrollView to behave properly: ignoring
anything from onInterceptTouchEvent to basically dictate that scrolling should
only happen directly on the palette.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458714618,1458714823,6709c81d120efcfbcf9e5c8babbd608b031a9e11
6709c81d120efcfbcf9e5c8babbd608b031a9e11,6709c81d,"Consolidate execute button positioning, make it no longer rely on pixels","Consolidate execute button positioning, make it no longer rely on pixels

We were shifting the execute button left and up 40 pixels, but this is bad
because it'll look different based on pixel density. Instead, we now shift it
left and up by 1/4 the width/height of the circle.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458693020,1458693020,083d2623fd1ca1f27528b559d101fc2de043c7cb
083d2623fd1ca1f27528b559d101fc2de043c7cb,083d2623,Fix visual bug when expressions are halfway off the bottom or right,"Fix visual bug when expressions are halfway off the bottom or right

The problem here was that the RelativeLayout parent seems to have a rule that
children that are partway off of the layout are given an AT_MOST measure spec
(but only on the bottom or right side, not the top or left side). This caused
expressions to look weird when they were partway off the edge of the screen. My
solution, which is a bit of a hack, but works, is to define a custom layout that
ignores the incoming measure spec and just uses UNSPECIFIED. This is effectively
a way to say that expressions should ignore any input from their enclosing
container when deciding their size.

Also do some other minor cleanups.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458690726,1458690919,31fbbbfc40dfce5c48f585d0f0ed67dbbd541e37
31fbbbfc40dfce5c48f585d0f0ed67dbbd541e37,31fbbbfc,Implement panning,"Implement panning

We now use a CanvasPoint coordinate system when storing the top level expression
positions, and convert between point types when necessary. The type safety made
this really easy!
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458542117,1458542117,94593858c0ede4de2abba72dcd5b24b06cb06648
94593858c0ede4de2abba72dcd5b24b06cb06648,94593858,Add a PointConverter class that can convert between coordinate types,"Add a PointConverter class that can convert between coordinate types

Currently it just deals with screen to drawable area, but in the future it will
also deal with canvas coordinates.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458537522,1458537564,d8a483d3e3dfbe2077435ecb08aab3dec0c45897
d8a483d3e3dfbe2077435ecb08aab3dec0c45897,d8a483d3,Finish making the point types typesafe,"Finish making the point types typesafe

We now consider points either ""screen points"" or ""drawable area points"", and we
also have a ""point difference"" class for doing point math. Most of the time,
points are created by doing point math, and stay within their coordinate system,
so this makes the whole system much more verifiable.

In the near future, a new ""canvas point"" will be added, probably where ""drawable
area point"" is used now.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458535478,1458535478,067b9677eb35b7b118ec582dd0bdbd2c3603ac54
067b9677eb35b7b118ec582dd0bdbd2c3603ac54,067b9677,First pass at refactoring points to be typesafe,"First pass at refactoring points to be typesafe

We have a bunch of coordinate systems, so this should make it a little easier to
reason about everything. The refactor is incomplete, and ideally in the end the
Point class will be completely gone.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458532125,1458532125,fbe703e10b9a0975ac416a31c3860f77464fc964
fbe703e10b9a0975ac416a31c3860f77464fc964,fbe703e1,Track the current pan position,"Track the current pan position

This requires us to keep track of drag operations on the root RelativeLayout.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458524918,1458529814,09eed41196c056c84346746e922fd71da85dff40
09eed41196c056c84346746e922fd71da85dff40,09eed411,Add retrolambda back,"Add retrolambda back

Oops, it looked like the build worked, but I actually had cached files. Turns
out lambdas require a bunch of extra config changes and don't just work. I tried
it out, but it looks like the jack compiler doesn't work with APT quite yet. So
I'll just go back to using retrolambda.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458524999,1458524999,a2704cef00c71dd76c3976eca90dd7f5c272d1db
a2704cef00c71dd76c3976eca90dd7f5c272d1db,a2704cef,Update to latest Android Studio,"Update to latest Android Studio

Also remove retrolambda since it seems to not be necessary anymore.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1458506114,1458506114,5b5fc87bf4ba996a049a4fd931b92bb201586f78
5b5fc87bf4ba996a049a4fd931b92bb201586f78,5b5fc87b,Change expression AST to use a lambda-based visitor pattern and AutoValue,"Change expression AST to use a lambda-based visitor pattern and AutoValue
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1439889001,1439889001,7de4f74510bafab1491c0b7c61823ed2744f17cb
7de4f74510bafab1491c0b7c61823ed2744f17cb,7de4f745,"Update to latest Android Studio, fix build","Update to latest Android Studio, fix build
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1439887684,1439887684,d1d105593e9b7227f6ec9bbd435858c8f8856127
d1d105593e9b7227f6ec9bbd435858c8f8856127,d1d10559,Normalize variable names when finishing a computation,"Normalize variable names when finishing a computation

This should avoid cases where we have primes after variable names due to
intermediate renaming done during the compute step.
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426660592,1426660592,34c3ece419f6af3320ad401d411d909b6ba37f2a
34c3ece419f6af3320ad401d411d909b6ba37f2a,34c3ece4,Allow dropping variables back on parameters,"Allow dropping variables back on parameters

It's fairly common to accidentlly tap the parameter of a lambda and create a new
variable, and before this commit the only way to actually get rid of it was to
drag it to the right side of the screen. Now, you can just ""put it back"" and it
will go away.
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426657080,1426657080,8266e6debb348386b2cfd155c4a43134b3c6ece6
8266e6debb348386b2cfd155c4a43134b3c6ece6,8266e6de,Change computed expressions to be centered below the bottom of the original expression,"Change computed expressions to be centered below the bottom of the original expression
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426655145,1426655145,6e3832aee484628a3d48449e47731c06c087e7d7
6e3832aee484628a3d48449e47731c06c087e7d7,6e3832ae,Add more variables to the palette,"Add more variables to the palette
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426654150,1426654150,7089329efb3bd01ee27d8f68ee1989ebb71075ad
7089329efb3bd01ee27d8f68ee1989ebb71075ad,7089329e,Fix bug where func views would steal click events,"Fix bug where func views would steal click events

For example, a function x(x) would have a view for the left x and a view for the
right x, and the left view would cover the function view itself. Ideally, we
would be smart enough to forward the events in that situation, but the hack I'm
using for now is to use Android's ability to disable views, which causes all
mouse events to the view to be ignored.
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426652929,1426652929,70ddd5a7fab34d517343d63286c788036945be4d
70ddd5a7fab34d517343d63286c788036945be4d,70ddd5a7,Fix evaluation bug caused by name conflicts,"Fix evaluation bug caused by name conflicts

If we try substituting an expression and a lambda parameter conflicts with a
variable that we're passing in, we need to resolve the issue by doing a rename.
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426650665,1426650665,75f30ca333cb3e034b6f16a38aa8db105f37ea89
75f30ca333cb3e034b6f16a38aa8db105f37ea89,75f30ca3,Add a concept of drop priority,"Add a concept of drop priority

Rather than tracking extra data, we just use the depth of the native view as a
priority and pick the one with the highest priority.
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426643954,1426643954,be187685eea93a34bb97c17beb32d46943828557
be187685eea93a34bb97c17beb32d46943828557,be187685,Fix mistake in expression evaluation,"Fix mistake in expression evaluation

It turns out that RxJava swallows StackOverFlowErrors, and it looks like it
wasn't hitting any error handler, even a new one I'm adding just in case.
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426641028,1426641028,337c50996c173f7975ae0d18805bbd7abfb44679
337c50996c173f7975ae0d18805bbd7abfb44679,337c5099,Don't use weak references in drag tracking,"Don't use weak references in drag tracking

I'm not sure if this was actually causing problems, but I saw problems
correlated with GC, so I'm just being safe for now. There are enough other
memory leaks that I doubt this makes things any worse.

Also make the screen empty on startup to make things a little easier to test.
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426639538,1426639538,4d70d1e1df3764f161b81aa461f9897b222d1b66
4d70d1e1df3764f161b81aa461f9897b222d1b66,4d70d1e1,Fix some display bugs with the execute button,"Fix some display bugs with the execute button

We now just have one function to invalidate it, and we call it whenever things
might have changed.
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426638766,1426638766,703ae969f45933b4e6a32a6e06907ed9493d4a2a
703ae969f45933b4e6a32a6e06907ed9493d4a2a,703ae969,Only start drag operations on down events,"Only start drag operations on down events

Like a fool, I ignored the part of the Android docs where it mentions that the
down, move, and up motion events aren't guaranteed to be consistent. It turns
out that they weren't kidding, I was starting drag events way before they
actually occurred, which cased the offset to be incorrect. Fixed by only
starting a drag event when the action type is DOWN.
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426637035,1426637035,087473dc770483f765730fbce9850acd2572b527
087473dc770483f765730fbce9850acd2572b527,087473dc,Add more horizontal spacing between components,"Add more horizontal spacing between components

This should make it a little easier to drop expressions in the right place.
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426632833,1426632833,df5c40212490daef2bc3410a7d7f070e470d6c2b
df5c40212490daef2bc3410a7d7f070e470d6c2b,df5c4021,Hook up lambdas and variables to funccall creation,"Hook up lambdas and variables to funccall creation

There are definitely some bugs, but it's not completely broken, and it's now
possible to make any expression!
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426632259,1426632259,3015d0d5acad5a4f665373e0367fa381af43211b
3015d0d5acad5a4f665373e0367fa381af43211b,3015d0d5,Refactor func call creation to be more general,"Refactor func call creation to be more general

This should hopefully make it easy to share code so that all expressions can
accept func call drags.
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426631796,1426631796,a36fca70cb23c2171f519066d96c4052bcc0e68f
a36fca70cb23c2171f519066d96c4052bcc0e68f,a36fca70,Don't turn the palette red when making an initial expression,"Don't turn the palette red when making an initial expression
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426630105,1426630105,29e9a05155b6fa71c7309e87fa93c8c0c2e3db7f
29e9a05155b6fa71c7309e87fa93c8c0c2e3db7f,29e9a051,Add support for deleting views by dropping them into the palette,"Add support for deleting views by dropping them into the palette
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426629805,1426629805,382f6be7c5080b0b69d6eb594e5c24bd2c676d28
382f6be7c5080b0b69d6eb594e5c24bd2c676d28,382f6be7,Add a nice background for the palette,"Add a nice background for the palette

Currently it's just a text view with hard-coded pixel coordinates. Ideally it
would be a fragment or something, and act like a drawer on phones.
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426628139,1426628139,b57c29dc92b45bfa70897b940e72895a42d2b3e1
b57c29dc92b45bfa70897b940e72895a42d2b3e1,b57c29dc,Add a basic pallette,"Add a basic pallette

It looks kind of weird now, but we render expressions for all of the common
lambdas and put them on the right.
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426626730,1426626848,d9c536da84bfd7f6a465855209d743623812b444
d9c536da84bfd7f6a465855209d743623812b444,d9c536da,Add basic support for evaluating expressions,"Add basic support for evaluating expressions

We just evaluate it to completion and show that as a new top-level expression
for now.
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426619965,1426619965,f68c250a2301501076832a97ca44e39265393ac2
f68c250a2301501076832a97ca44e39265393ac2,f68c250a,Get rid of the borders and action bar,"Get rid of the borders and action bar
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426570310,1426570310,c5d1c617d06b4815bf39f0cfe35be71ec6e41417
c5d1c617d06b4815bf39f0cfe35be71ec6e41417,c5d1c617,Display an execute button for executable expressions,"Display an execute button for executable expressions
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426564254,1426564254,a596b52eef52ef6da0c2b5bf239c0b1a47280268
a596b52eef52ef6da0c2b5bf239c0b1a47280268,a596b52e,Fix bug where funccall drag sources wouldn't be cleaned up,"Fix bug where funccall drag sources wouldn't be cleaned up

We need to unregister everything from the subject when we get rid of the
expression.

Also commit some Android Studio changes that maybe I should just remove from the
repo.
",,,,Alan Pierce,alan@khanacademy.org,Alan Pierce,alan@khanacademy.org,1426527557,1426527575,d9660371680c2287ab403861334a2913d2698c61
d9660371680c2287ab403861334a2913d2698c61,d9660371,Add the ability to make function calls on variable expressions,"Add the ability to make function calls on variable expressions
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426498836,1426498836,7536061431eccbee8231df8ca17bdd02940865c8
7536061431eccbee8231df8ca17bdd02940865c8,75360614,Optimize imports,"Optimize imports
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426493240,1426493240,4e8af58844471e2716683599fbfc197a4b986073
4e8af58844471e2716683599fbfc197a4b986073,4e8af588,Fix bug where lambdas would drop into themselves,"Fix bug where lambdas would drop into themselves

If we moved a lambda expression containing containing a lambda body drop target,
it would match itself, and doing a drop operation would make it its own parent,
so it would just disappear. Fixed by changing the hit test logic to specifically
ignore the expression being dragged.

Ideally, we would do all of this independent of Android logic, but it's pretty
easy to do a parent test on the native views, so I just did that.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426492736,1426492736,8e31a3223b7b2c4cc7e740df55edbcd4c096f053
8e31a3223b7b2c4cc7e740df55edbcd4c096f053,8e31a322,Get rid of unsubscribe code,"Get rid of unsubscribe code

We previously solved a problem of duplicate subscriptions by unsubscribing, for
example when we drag an expression out of a lambda body. Now, we use subjects to
solve the same problem in a cleaner way, so unsubscribing is no longer needed
and was causing bugs.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426490437,1426490437,725cbdc4a14a034b02398f11783fa379a0f84cfa
725cbdc4a14a034b02398f11783fa379a0f84cfa,725cbdc4,Make it possible to drop expressions into empty lambda bodies,"Make it possible to drop expressions into empty lambda bodies

Still some bugs, but the basic functionality works.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426489395,1426489395,cbd7bf1a3c6383ebbed38ab728c83cb624d35379
cbd7bf1a3c6383ebbed38ab728c83cb624d35379,cbd7bf1a,Add hit testing for drop targets,"Add hit testing for drop targets

We currently just loop through the targets and choose one.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426487123,1426487123,760bb0808ea1e653d6f6b24a9ac8626642b672cf
760bb0808ea1e653d6f6b24a9ac8626642b672cf,760bb080,Add a DropTarget for lambda bodies,"Add a DropTarget for lambda bodies

It isn't hooked up yet, but it should do basic hit testing and display changes.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426485407,1426485407,462c4f9a897b8bc188bdc09c3a794d20cbda83e7
462c4f9a897b8bc188bdc09c3a794d20cbda83e7,462c4f9a,"Optimize imports, fix state saving","Optimize imports, fix state saving

The Point class needed to be Serializable.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426483484,1426483484,3217a7c0bf6044a8d1bca33459f519da78199dfd
3217a7c0bf6044a8d1bca33459f519da78199dfd,3217a7c0,Properly register new top-level expressions,"Properly register new top-level expressions

In addition to making the controllers, we actually hook the expressions up to
the TopLevelExpressionManager so that they're persisted across rotation and
things like that.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426483243,1426483243,6eb6bdcb8cad86c27cdfe40046c0bfdba22d34b0
6eb6bdcb8cad86c27cdfe40046c0bfdba22d34b0,6eb6bdcb,Correctly update the position when dragging top-level views,"Correctly update the position when dragging top-level views

It turns out we don't have the screen position of the canvas on the initial
draw, so I had to change the model to store relative coordinates, which is
probably more correct anyway. This means we need to be more careful about units,
though.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426480467,1426480501,1cef47b307303cace428008c4948249858997615
1cef47b307303cace428008c4948249858997615,1cef47b3,Move a little closer to a default drop handler,"Move a little closer to a default drop handler

It still doesn't work because top-level expressions aren't being created
correctly.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426473712,1426473712,b388dadc646d6eb79d26ac9cddf7246806f25172
b388dadc646d6eb79d26ac9cddf7246806f25172,b388dadc,Refactor DragManagerImpl a little,"Refactor DragManagerImpl a little

Instead of a big switch, we now have a separate function for each logical
operation.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426472260,1426472260,ed645cf05538ce3b3a72f6af4441123ada23e2c4
ed645cf05538ce3b3a72f6af4441123ada23e2c4,ed645cf0,Fix some bugs with dragging,"Fix some bugs with dragging

* We needed to update DragSource observables when expressions changed. RxJava
  subjects to the rescue!
* Some controllers weren't properly updating their child controllers, so we were
  choosing the wrong view in some cases.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426470796,1426471117,89fda7e94cf4b2fb89d883c9514c93677f3651f5
89fda7e94cf4b2fb89d883c9514c93677f3651f5,89fda7e9,Stop using weak references to keep track of subscribers,"Stop using weak references to keep track of subscribers

It turns out that we don't actually reference them elsewhere in some cases where
they're still needed, so the UI was pretty much completely non-functional in the
emulator.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426464740,1426464740,2522bae155bee8a833b51a3ebb73c1d7c432dee3
2522bae155bee8a833b51a3ebb73c1d7c432dee3,2522bae1,Rename DragSourceManagerImpl to a slightly better name,"Rename DragSourceManagerImpl to a slightly better name
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426462941,1426462941,09c76dcf5acb4cef832fd5c5c37d9b8e8ed6f527
09c76dcf5acb4cef832fd5c5c37d9b8e8ed6f527,09c76dcf,Handle model changes to expressions,"Handle model changes to expressions

There's still a problem where DragSources aren't being updated correctly,
though.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426462171,1426462293,7af66d63c894ff902aed2474d5a2d393a771f0a0
7af66d63c894ff902aed2474d5a2d393a771f0a0,7af66d63,Restructure callbacks to take the new ExpressionController,"Restructure callbacks to take the new ExpressionController

This should make it easier to have function calls change into their left side.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426456527,1426456527,3f8368deb1416b5bb51a14d96e609765ac9c5692
3f8368deb1416b5bb51a14d96e609765ac9c5692,3f8368de,Show the placeholder area when dragging a lambda body out,"Show the placeholder area when dragging a lambda body out
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426451782,1426451782,a51f573a7d00cff968f8d9ada1f0b67dd84ecbbe
a51f573a7d00cff968f8d9ada1f0b67dd84ecbbe,a51f573a,Actually register function arg drag sources,"Actually register function arg drag sources
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426451527,1426451527,35023f215ae2ccc6fee9a4b6cfce1b32d5d56aec
35023f215ae2ccc6fee9a4b6cfce1b32d5d56aec,35023f21,Avoid accumulating more and more DragSources over time,"Avoid accumulating more and more DragSources over time

Each drag source now is given its rx subscription when the event starts, and it
can use that to indicate that the drag source should go away. For example, we do
this when dragging a lambda body out of a lambda (since it gets replaced with a
top-level drag source), but not when creating a variable from a lambda
parameter.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426450616,1426450616,8a802490bc060af786a530260acef64941e9869f
8a802490bc060af786a530260acef64941e9869f,8a802490,Add the ability to drag function arguments,"Add the ability to drag function arguments

There seem to be some problems with observables being registered multiple times,
but I'll fix that in a later commit.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426417773,1426417773,5642426940fe640a54512917230e259b2b61097e
5642426940fe640a54512917230e259b2b61097e,56424269,Update .gitignore,"Update .gitignore
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426413026,1426413026,7925e184149992b7df044bd30ee88fe8640ddf84
7925e184149992b7df044bd30ee88fe8640ddf84,7925e184,Add dragging back for top-level expressions,"Add dragging back for top-level expressions
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426412870,1426412870,dd9cd5c47439e0cc70f369ef604c604296438f39
dd9cd5c47439e0cc70f369ef604c604296438f39,dd9cd5c4,Put more display login in TopLevelExpressionView,"Put more display login in TopLevelExpressionView
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426412246,1426412246,0f37783bddf012f03e0f3068dfa392924cb733bb
0f37783bddf012f03e0f3068dfa392924cb733bb,0f37783b,Get rid of OnDetachCallback,"Get rid of OnDetachCallback

The new plan is that all view detaching happens from the caller, so there isn't
a need to ask the parent expression to detach.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426407419,1426407419,e091965b6403610e8a4dc2c191fb1ad1204a73fc
e091965b6403610e8a4dc2c191fb1ad1204a73fc,e091965b,Fix bug with dragging views out of expressions,"Fix bug with dragging views out of expressions

Turns out we really need to wait for a down event before detaching from the
normal parent view.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426405317,1426405317,fb7d1d8715c46ebf56960921ab09ed99f13a80e7
fb7d1d8715c46ebf56960921ab09ed99f13a80e7,fb7d1d87,Add the ability to create variables from parameters,"Add the ability to create variables from parameters
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426404293,1426404293,6642e8a1d957190fdea94e215fceb4262b563da7
6642e8a1d957190fdea94e215fceb4262b563da7,6642e8a1,Merge drag registry and drop registry into DragManager,"Merge drag registry and drop registry into DragManager
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426403704,1426403704,6de62235071c716fe06be375e2d4eb9cc812aa27
6de62235071c716fe06be375e2d4eb9cc812aa27,6de62235,Pull dragging logic out of specific expression controllers,"Pull dragging logic out of specific expression controllers
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426402938,1426402938,3fac40c0c92024a65bca2dc3f5a634e7a5dd77e7
3fac40c0c92024a65bca2dc3f5a634e7a5dd77e7,3fac40c0,Pull state management into a separate class,"Pull state management into a separate class

Now the fragment does almost nothing by itself; there's an injectable singleton
state manager, and the fragment uses it to persist and hydrate state, and the
rest of the work is done by a new TopLevelExpressionManager.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426393624,1426393624,78bc04fb37abb85b4b8ab4b064f68563f5553e8d
78bc04fb37abb85b4b8ab4b064f68563f5553e8d,78bc04fb,Add rootView as an injectable class,"Add rootView as an injectable class

No more need for a FactoryFactory!
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426386448,1426386448,e256637b5295b27116725998b2b946b5fd1e872f
e256637b5295b27116725998b2b946b5fd1e872f,e256637b,Change the dagger component to be fragment-scoped,"Change the dagger component to be fragment-scoped

I wasn't using Activities anyway, and it'll be eaiser to be able to inject the
root view and things like that.

Also add a hacky incomplete version of being able to drag lambda parameters out.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426385217,1426385217,2a9faed31e3ef36b39aa9a89d382bb6450b0ba70
2a9faed31e3ef36b39aa9a89d382bb6450b0ba70,2a9faed3,Change DragSource spec to deal with observables instead of views,"Change DragSource spec to deal with observables instead of views
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426383572,1426383572,d8206c6383ab297521637f586ea0df7f7656c846
d8206c6383ab297521637f586ea0df7f7656c846,d8206c63,Refactor things to use views,"Refactor things to use views

Instead of dealing with native views, we now have wrappers for the different
types of native views, which should make it easier to do operations like ""listen
to drag operations on the parameter view in the lambda"".

Plenty of law of demeter violations currently, but the idea is that views should
control all Android-specific stuff, and manage the visual changes during drags
and things like that.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426382933,1426383149,796c89242f2b687e486b2bcc5784202c89fd9cf0
796c89242f2b687e486b2bcc5784202c89fd9cf0,796c8924,Restructure things to use DragSource and DropTarget interfaces,"Restructure things to use DragSource and DropTarget interfaces

Not totally fleshed out yet, but the idea is that we'll be able to produce any
drag sources and drop targets we want and a separate layer will coordinate
between them.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426323437,1426323437,64b693c6f50537a3159e1e2979a8f29890dbc3ff
64b693c6f50537a3159e1e2979a8f29890dbc3ff,64b693c6,Implement saving and loading of expressions,"Implement saving and loading of expressions

Modifications now affect the fragment state, so rotation the screen works for
expression values (but not positions yet).
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426313945,1426313945,9158a1f48e90e5c5d947b005013a69ee7850871d
9158a1f48e90e5c5d947b005013a69ee7850871d,9158a1f4,Use Observable.compose to do chaining in one place,"Use Observable.compose to do chaining in one place
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426305398,1426305398,63c07a0f40e8dff674d7fc4ff3a6654c22176087
63c07a0f40e8dff674d7fc4ff3a6654c22176087,63c07a0f,Change raw coordinate getting to use reflection hacks,"Change raw coordinate getting to use reflection hacks

The previous hack of getting the screen coordinates of the parent view wasn't
working in certain situations where we were re-parenting and repositioning the
view. Instead, we hackily use reflection to call a private function in the
MotionEvent class that does exactly what I want.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426267420,1426267420,0633567b5ce4494228ba08e711ff2de517891559
0633567b5ce4494228ba08e711ff2de517891559,0633567b,Handle detaching expressions from other expressions,"Handle detaching expressions from other expressions
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426241225,1426241225,931f71ca18acebcc90997e9ee23b6a7960b9a0cb
931f71ca18acebcc90997e9ee23b6a7960b9a0cb,931f71ca,Rework structure to allow for detaching and attaching expressions,"Rework structure to allow for detaching and attaching expressions

This breaks dragging, but puts the code in a state that should be better moving
forward.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426225011,1426225011,6d6c10291a857a19a593b61610e86492181d4d47
6d6c10291a857a19a593b61610e86492181d4d47,6d6c1029,Separate drag observables from the action of moving the view,"Separate drag observables from the action of moving the view
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426147060,1426147147,b7f0127015394e8ce6a8f8128b79bb506eab6734
b7f0127015394e8ce6a8f8128b79bb506eab6734,b7f01270,FRPize more drag events,"FRPize more drag events

This introduces horrible bugs where objects become undraggable, but I'll fix
that later. We now go through multiple transformations to get an observable that
produces independent drag operations, which themselves are observables of
points. That means that the subscriber no longer needs to think about which
pointer is the active one, and can just ignore pointers that come in while one
is active.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1426065384,1426065384,cba7d50db35b683342cfed30fcdb7e93af489bf0
cba7d50db35b683342cfed30fcdb7e93af489bf0,cba7d50d,Wrap android motion event tracking in an observable,"Wrap android motion event tracking in an observable

We now send PointerMotionEvent values that have a format that's easier to work
with compared with Android's API.

I also added AutoValue to make it easier to add these value types.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1425966511,1425966785,c384d4ea42b69ff21b2f0f913b788c07dcfcc39b
c384d4ea42b69ff21b2f0f913b788c07dcfcc39b,c384d4ea,Refactor dragging logic into its own package,"Refactor dragging logic into its own package

Also pull out the Observable<MotionEvent> logic into a separate class.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1425867397,1425867541,d49cd4cccbb2bd171ea386982c37514b3c2b6e5c
d49cd4cccbb2bd171ea386982c37514b3c2b6e5c,d49cd4cc,Start using RxJava for tracking mouse events,"Start using RxJava for tracking mouse events
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1425865972,1425865972,ca7be0d943962bd779ef3dbf089e53e21f1b2fb4
ca7be0d943962bd779ef3dbf089e53e21f1b2fb4,ca7be0d9,Make it possible to drag sub-expressions,"Make it possible to drag sub-expressions

Currently it's a bit weird because the old expression stays there; we just
render a new one as the ""drag shadow"".
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1424680838,1424680838,188fd2b94da9faadb2fb7a716726351e5fce74c2
188fd2b94da9faadb2fb7a716726351e5fce74c2,188fd2b9,"Extract an interface, fix crash on screen rotation","Extract an interface, fix crash on screen rotation
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1424676574,1424676574,c740e21f6471591011a05b1acded99508f59b858
c740e21f6471591011a05b1acded99508f59b858,c740e21f,Add dagger for the few existing classes,"Add dagger for the few existing classes
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1424675624,1424675624,95c3d04fd8325c04d946d4a5dade2c88881bbf68
95c3d04fd8325c04d946d4a5dade2c88881bbf68,95c3d04f,Add basic dragging back,"Add basic dragging back

Looks like I'll probably need to implement drag-and-drop myself, so this is a
first pass, which should also make it more reasonable to drag sub-expressions
out of expressions.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1424668751,1424668751,36d8dbea8debd35adbbc98b930c6372ec0781a1e
36d8dbea8debd35adbbc98b930c6372ec0781a1e,36d8dbea,Refactor expression view generation into a separate class,"Refactor expression view generation into a separate class
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1424597193,1424597193,908ee4ddf6e34d634c889ffd2a9fe93dfaff6b17
908ee4ddf6e34d634c889ffd2a9fe93dfaff6b17,908ee4dd,"Separate ""pure"" expressions from user expressions","Separate ""pure"" expressions from user expressions

We now support lambda expressions without bodies, which are useful as an
intermediate step while constructing an expression. They render with a red box
where the body should go. This required changing the model code so that we have
two types of AST, one with pure lambda calculus expressions and one with a
user-facing expression that may not be pure. In addition to a missing lambda
body, it might also have shorthands (e.g. Y instead of the full Y combinator)
and maybe custom colors or things like that.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1424596453,1424596453,5c80d83660353a57d4bb468d033fdd44c79ed555
5c80d83660353a57d4bb468d033fdd44c79ed555,5c80d836,Add rendering for expressions,"Add rendering for expressions

We now show true and the Y combinator with a first pass at nested expressions
with shadows.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1424572619,1424575362,2ab817d40e1efeda57301aa780e2f7a407fbefe7
2ab817d40e1efeda57301aa780e2f7a407fbefe7,2ab817d4,"Rework dragging, add initial expression classes","Rework dragging, add initial expression classes

I'll shelve dragging for now while I think more about the underlying
representation and rendering.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1424511785,1424511785,894504456daf45fba59bea77e5e2655ceab28399
894504456daf45fba59bea77e5e2655ceab28399,89450445,Add README and LICENSE,"Add README and LICENSE
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1424056403,1424056465,a7df64556f771b8d2ebbe7012b1defddcbbdf60b
a7df64556f771b8d2ebbe7012b1defddcbbdf60b,a7df6455,Add the ability to create variables from arguments,"Add the ability to create variables from arguments

The user can now touch an argument appearing after a lambda, and it will create
a new ExpressionFragment with just that variable, and the drag operation will
transition to dragging just that new fragment.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1424055325,1424055325,0de70ad9a755f02da26b34cfca6b75d2572aa81c
0de70ad9a755f02da26b34cfca6b75d2572aa81c,0de70ad9,Change ViewDragger support arbitrary drag handles,"Change ViewDragger support arbitrary drag handles

The previous code assumed that the drag handle would move along with the touch
position, which has been true so far. For creating new variable instances,
though, we may want to make a new fragment that moves instead of the original
handle.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1424046165,1424046165,44da96851693f59c3b0e2dbd1b48732a7e8d76dc
44da96851693f59c3b0e2dbd1b48732a7e8d76dc,44da9685,Make expression views respect their contents,"Make expression views respect their contents
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1424045004,1424045004,5ff361ccf4b11738962799a42c5b7dc9a9379017
5ff361ccf4b11738962799a42c5b7dc9a9379017,5ff361cc,Make expression fragments dynamic,"Make expression fragments dynamic

The parent now makes two hard-coded fragments, which take their position and
contents as a parameter, and we save the position along in the fragment's state.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1424044508,1424044508,c3bb97e51badeab4616c1c66be787d31fcd3000f
c3bb97e51badeab4616c1c66be787d31fcd3000f,c3bb97e5,Add a simple draggable lambda component,"Add a simple draggable lambda component

The lambda is the drag handle, and dragging the rest doesn't do anything.
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1424036986,1424036986,1e330f2d14de08d27e381192c4e0f21c42478a20
1e330f2d14de08d27e381192c4e0f21c42478a20,1e330f2d,Initial commit with blank project,"Initial commit with blank project
",,,,Alan Pierce,alangpierce@gmail.com,Alan Pierce,alangpierce@gmail.com,1423997055,1423997055,
